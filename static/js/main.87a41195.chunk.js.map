{"version":3,"sources":["components/AddChar.js","helpers/useCharStats.js","components/Char.js","components/App.js","helpers/useLocalStorage.js","index.js","components/char.module.css","components/addchar.module.css","components/app.module.css"],"names":["Option","Select","AddChar","onAdd","useState","Immutable","Map","region","server","char","setChar","onChange","key","e","set","target","value","onSubmit","preventDefault","toJS","className","styles","cont","field","style","width","get","bind","this","type","name","placeholder","htmlType","_charStats","window","charStats","console","log","Crawled","styled","div","Char","onDelete","rio","serialize","setCharStats","useEffect","fetch","url","then","resp","json","useCharStats","error","card","CloseCircleOutlined","onClick","delete","message","currentScores","mythic_plus_scores_by_season","scores","bestRuns","mythic_plus_best_runs","title","src","thumbnail_url","avatar","href","profile_url","rel","avatarAnnex","marginLeft","race","class","Meta","all","tank","subscore","healer","dps","grid","map","run","dungeon","mythic_level","score","num_keystone_upgrades","Date","last_crawled_at","toLocaleString","Header","Layout","Content","App","initialValue","item","localStorage","getItem","JSON","parse","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","chars","setChars","index","slice","app","cards","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.87a41195.chunk.js","sourcesContent":["import styles from './addchar.module.css';\n\nimport { useState } from 'react';\nimport Immutable from 'immutable';\nimport { Button, Input, Select } from 'antd';\n\nconst { Option } = Select;\n\nexport default function AddChar({ onAdd }) {\n    const [char, setChar] = useState(Immutable.Map({ region: 'us', server: '', char: '' }));\n    function onSubmit(e) {\n        e.preventDefault();\n        onAdd(char.toJS());\n    }\n\n    function onChangeSelect(key, value) {\n        setChar(char.set(key, value));\n    }\n    function onChange(key, e) {\n        setChar(char.set(key, e.target.value));\n    }\n\n    return (\n        <div>\n            <form onSubmit={onSubmit} className={styles.cont}>\n                <div className={styles.field}>\n                    <Select\n                        style={{ width: 120 }}\n                        value={char.get('region')}\n                        onChange={onChangeSelect.bind(this, 'region')}\n                    >\n                        <Option value=\"us\">us</Option>\n                        <Option value=\"eu\">eu</Option>\n                        <Option value=\"tw\">tw</Option>\n                        <Option value=\"kr\">kr</Option>\n                        <Option value=\"cn\">cn</Option>\n                    </Select>\n                </div>\n                <div className={styles.field}>\n                    <Input\n                        type=\"text\"\n                        name=\"server\"\n                        value={char.get('server')}\n                        placeholder=\"Server\"\n                        onChange={onChange.bind(this, 'server')}\n                    />\n                </div>\n                <div className={styles.field}>\n                    <Input\n                        type=\"text\"\n                        name=\"char\"\n                        value={char.get('char')}\n                        placeholder=\"Character\"\n                        onChange={onChange.bind(this, 'char')}\n                    />\n                </div>\n                <div className={styles.field}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Add\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import { useEffect, useState } from 'react';\n\nfunction serialize(char) {\n\treturn `${char.region}:${char.server}:${char.char}`;\n}\n\nfunction url(char) {\n\treturn `https://raider.io/api/v1/characters/profile?region=${char.region}&realm=${char.server}&name=${char.char}&fields=mythic_plus_scores_by_season:current,mythic_plus_best_runs`;\n}\n\nconst _charStats = {};\nwindow.charStats = _charStats;\nconsole.log('See `charStats` to view fetched RIO data.');\n\nexport default function useCharStats(char) {\n\tconst key = serialize(char);\n\tconst [charStats, setCharStats] = useState(_charStats);\n\tuseEffect(() => {\n\t\tif (!charStats[key]) {\n\t\t\tconsole.log('Fetching', key);\n\t\t\tfetch(url(char))\n\t\t\t\t.then(resp => resp.json())\n\t\t\t\t.then(json => {\n\t\t\t\t\t_charStats[key] = json;\n\t\t\t\t\tsetCharStats({\n\t\t\t\t\t\t...charStats,\n\t\t\t\t\t\t[key]: json,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t}, [key, char, charStats, setCharStats]);\n\treturn charStats[key];\n}\n","import styles from './char.module.css';\n\nimport { Fragment } from 'react';\nimport styled from 'styled-components';\n\nimport useCharStats from '../helpers/useCharStats';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { Card, Avatar, Divider } from 'antd';\n\nconst Crawled = styled.div`\n\topacity: 0.8;\n\tmargin-top: 10px;\n\tfont-size: 0.8rem;\n`;\n\nexport default function Char({ char, onDelete }) {\n\tconst rio = useCharStats(char);\n\n\tif (!rio) {\n\t\treturn null;\n\t}\n\n\tif (rio.error) {\n\t\treturn (\n\t\t\t<Card className={styles.card}>\n\t\t\t\t<CloseCircleOutlined onClick={onDelete} className={styles.delete} />\n\t\t\t\t<strong>{rio.error}</strong>\n\t\t\t\t<p>{rio.message}</p>\n\t\t\t</Card>\n\t\t);\n\t}\n\n\tconst currentScores = rio.mythic_plus_scores_by_season[0].scores;\n\tconst bestRuns = rio.mythic_plus_best_runs;\n\n\tconst title = (\n\t\t<>\n\t\t\t<Avatar src={rio.thumbnail_url} className={styles.avatar} />\n\t\t\t<a\n\t\t\t\thref={rio.profile_url}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t\tclassName={styles.avatarAnnex}\n\t\t\t>\n\t\t\t\t<strong>{rio.name}</strong>\n\t\t\t\t<small style={{ marginLeft: '10px' }}>\n\t\t\t\t\t{rio.race} {rio.class}\n\t\t\t\t</small>\n\t\t\t</a>\n\t\t</>\n\t);\n\treturn (\n\t\t<Card className={styles.card}>\n\t\t\t<Card.Meta title={title} />\n\t\t\t<CloseCircleOutlined onClick={onDelete} className={styles.delete} />\n\t\t\t<h3 className={styles.avatarAnnex}>{currentScores.all}</h3>\n\t\t\t{currentScores.tank ? (\n\t\t\t\t<span className={styles.subscore}>\n\t\t\t\t\t<strong>Tank</strong>: {currentScores.tank}\n\t\t\t\t</span>\n\t\t\t) : null}\n\t\t\t{currentScores.healer ? (\n\t\t\t\t<span className={styles.subscore}>\n\t\t\t\t\t<strong>Healer</strong>: {currentScores.healer}\n\t\t\t\t</span>\n\t\t\t) : null}\n\t\t\t{currentScores.dps ? (\n\t\t\t\t<span className={styles.subscore}>\n\t\t\t\t\t<strong>DPS</strong>: {currentScores.dps}\n\t\t\t\t</span>\n\t\t\t) : null}\n\t\t\t<Divider />\n\t\t\t<div className={styles.grid}>\n\t\t\t\t<div>\n\t\t\t\t\t<strong>Dungeon</strong>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<strong>Level</strong>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<strong>Score</strong>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<strong>+?</strong>\n\t\t\t\t</div>\n\t\t\t\t{bestRuns.map(run => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Fragment key={run.dungeon}>\n\t\t\t\t\t\t\t<div>{run.dungeon}</div>\n\t\t\t\t\t\t\t<div>{run.mythic_level}</div>\n\t\t\t\t\t\t\t<div>{run.score}</div>\n\t\t\t\t\t\t\t<div>{run.num_keystone_upgrades}</div>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t<Crawled>Last crawled at {new Date(rio.last_crawled_at).toLocaleString()}</Crawled>\n\t\t</Card>\n\t);\n}\n","import styles from './app.module.css';\n\nimport useLocalStorage from '../helpers/useLocalStorage';\n\nimport { Layout } from 'antd';\nimport AddChar from './AddChar';\nimport Char from './Char';\n\nconst { Header, Content } = Layout;\n\nfunction App() {\n    const [chars, setChars] = useLocalStorage('chars', []);\n\n    function onAdd(char) {\n        setChars([...chars, char]);\n    }\n\n    function onDelete(index) {\n        setChars([...chars.slice(0, index), ...chars.slice(index + 1)]);\n    }\n\n    return (\n        <div className={styles.app}>\n            <Layout>\n                <Header>\n                    <AddChar onAdd={onAdd} />\n                </Header>\n                <Content className={styles.cards}>\n                    {chars &&\n                        chars.map((char, index) => (\n                            <Char key={index} char={char} onDelete={onDelete.bind(this, index)} />\n                        ))}\n                </Content>\n            </Layout>\n        </div>\n    );\n}\n\nexport default App;\n","import { useState } from 'react';\n\n// Hook\nexport default function useLocalStorage(key, initialValue) {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n        try {\n            // Get from local storage by key\n            const item = window.localStorage.getItem(key);\n            // Parse stored json or if none return initialValue\n            return item ? JSON.parse(item) : initialValue;\n        } catch (error) {\n            // If error also return initialValue\n            console.log(error);\n            return initialValue;\n        }\n    });\n\n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = value => {\n        try {\n            // Allow value to be a function so we have same API as useState\n            const valueToStore = value instanceof Function ? value(storedValue) : value;\n            // Save state\n            setStoredValue(valueToStore);\n            // Save to local storage\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\n        } catch (error) {\n            // A more advanced implementation would handle the error case\n            console.log(error);\n        }\n    };\n\n    return [storedValue, setValue];\n}\n","import './index.css';\nimport 'antd/dist/antd.dark.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatarAnnex\":\"char_avatarAnnex__5cFg5\",\"avatar\":\"char_avatar__3AKjy\",\"card\":\"char_card__1gkPj\",\"delete\":\"char_delete__1jfH1\",\"subscore\":\"char_subscore__3Uo6v\",\"grid\":\"char_grid__3x2ww\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cont\":\"addchar_cont__12bQ0\",\"field\":\"addchar_field__3nx31\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__1F5XI\",\"cards\":\"app_cards__2Hupy\"};"],"sourceRoot":""}