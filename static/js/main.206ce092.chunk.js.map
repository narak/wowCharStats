{"version":3,"sources":["helpers/useLocalStorage.js","components/common/AddChar.js","helpers/useRaiderIOStats.js","components/raiderio/LFGFilter.js","components/raiderio/Char.js","components/raiderio/index.js","helpers/useAuthToken.js","helpers/enqueue.js","helpers/useWLCharStats.js","components/warcraftlogs/char/index.js","components/App.js","components/warcraftlogs/index.js","index.js","components/raiderio/char.module.css","components/common/addchar.module.css","components/app.module.css","components/raiderio/index.module.css"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","Option","Select","AddChar","onAdd","region","server","name","char","setChar","onChange","e","target","onSubmit","preventDefault","className","styles","cont","field","style","width","bind","this","type","placeholder","htmlType","_cache","rioStats","Abbrs","Plaguefall","getAbbr","BG","styled","div","FilterTitle","b","Filter","span","LFGFilter","runs","copied","setCopied","useMemo","_keysByLvl","_lowestKey","forEach","run","mythic_level","push","dungeon","keysByLvl","lowestKey","useEffect","setTimeout","filterText","map","join","text","onCopy","Crawled","Char","onDelete","rio","serialize","setRIOStats","axios","get","url","then","resp","data","catch","response","useRaiderIOStats","card","message","DeleteFilled","onClick","delete","currentScores","mythic_plus_scores_by_season","scores","bestRuns","mythic_plus_best_runs","title","src","thumbnail_url","avatar","href","profile_url","rel","avatarAnnex","marginLeft","race","class","Meta","mainScore","all","icon","tank","subscore","healer","dps","grid","score","num_keystone_upgrades","Date","last_crawled_at","toLocaleString","onHover","Content","Layout","_req","authBody","FormData","useAuthToken","cb","token","setToken","method","headers","auth","username","password","access_token","append","_handler","queue","query","useWLCharStats","chars","vals","setVals","config","Authorization","isFetching","post","val","charData","characterData","character","job","Error","requestIdleCallback","length","q","undefined","enqueue","wlDPSStats","Index","setChars","allStats","stats","setStats","index","slice","newStats","prevStats","byBoss","bosses","newByBoss","newBosses","rankings","zoneRankings","rank","boss","encounter","bestAmount","consolidateByBoss","padding","Header","Tabs","TabMap","cards","App","tab","setTab","Tab","app","theme","mode","selectedKeys","keyPath","Item","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.206ce092.chunk.js","sourcesContent":["import { useState } from 'react';\n\n// Hook\nexport default function useLocalStorage(key, initialValue) {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n        try {\n            // Get from local storage by key\n            const item = window.localStorage.getItem(key);\n            // Parse stored json or if none return initialValue\n            return item ? JSON.parse(item) : initialValue;\n        } catch (error) {\n            // If error also return initialValue\n            console.log(error);\n            return initialValue;\n        }\n    });\n\n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = value => {\n        try {\n            // Allow value to be a function so we have same API as useState\n            const valueToStore = value instanceof Function ? value(storedValue) : value;\n            // Save state\n            setStoredValue(valueToStore);\n            // Save to local storage\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\n        } catch (error) {\n            // A more advanced implementation would handle the error case\n            console.log(error);\n        }\n    };\n\n    return [storedValue, setValue];\n}\n","import styles from './addchar.module.css';\n\nimport { useState } from 'react';\nimport { Button, Input, Select } from 'antd';\n\nconst { Option } = Select;\n\nexport default function AddChar({ onAdd }) {\n    const [char, setChar] = useState({ region: 'us', server: '', name: '' });\n    function onSubmit(e) {\n        e.preventDefault();\n        onAdd(char);\n    }\n\n    function onChangeSelect(key, value) {\n        setChar({ ...char, [key]: value });\n    }\n    function onChange(key, e) {\n        setChar({ ...char, [key]: e.target.value });\n    }\n\n    return (\n        <form onSubmit={onSubmit} className={styles.cont}>\n            <div className={styles.field}>\n                <Select\n                    style={{ width: 120 }}\n                    value={char.region}\n                    onChange={onChangeSelect.bind(this, 'region')}\n                >\n                    <Option value=\"us\">us</Option>\n                    <Option value=\"eu\">eu</Option>\n                    <Option value=\"tw\">tw</Option>\n                    <Option value=\"kr\">kr</Option>\n                    <Option value=\"cn\">cn</Option>\n                </Select>\n            </div>\n            <div className={styles.field}>\n                <Input\n                    type=\"text\"\n                    name=\"server\"\n                    value={char.server}\n                    placeholder=\"Server\"\n                    onChange={onChange.bind(this, 'server')}\n                />\n            </div>\n            <div className={styles.field}>\n                <Input\n                    type=\"text\"\n                    name=\"char\"\n                    value={char.name}\n                    placeholder=\"Character\"\n                    onChange={onChange.bind(this, 'name')}\n                />\n            </div>\n            <div className={styles.field}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Add\n                </Button>\n            </div>\n        </form>\n    );\n}\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction serialize(char) {\n\treturn `${char.region}:${char.server}:${char.name}`;\n}\n\nfunction url(char) {\n\treturn `https://raider.io/api/v1/characters/profile?region=${char.region}&realm=${char.server}&name=${char.name}&fields=mythic_plus_scores_by_season:current,mythic_plus_best_runs`;\n}\n\nconst _cache = {};\nwindow.rioStats = _cache;\nconsole.log('See `rioStats` to view fetched RIO data.');\n\nexport default function useRaiderIOStats(char) {\n\tconst key = serialize(char);\n\tconst [rioStats, setRIOStats] = useState(_cache);\n\tuseEffect(() => {\n\t\tif (!rioStats[key]) {\n\t\t\tconsole.log('Fetching', key);\n\t\t\taxios\n\t\t\t\t.get(url(char))\n\t\t\t\t.then(resp => {\n\t\t\t\t\t_cache[key] = resp.data;\n\t\t\t\t\tsetRIOStats({\n\t\t\t\t\t\t...rioStats,\n\t\t\t\t\t\t[key]: resp.data,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(function (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\tsetRIOStats({\n\t\t\t\t\t\t...rioStats,\n\t\t\t\t\t\t[key]: error?.response?.data || error,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t}, [key, char, rioStats, setRIOStats]);\n\treturn rioStats[key];\n}\n","import { useMemo, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nconst Abbrs = {\n    'Spires of Ascension': 'soa',\n    'Theater of Pain': 'top',\n    'Halls of Atonement': 'hoa',\n    'The Necrotic Wake': 'nw',\n    'De Other Side': 'dos',\n    'Mists of Tirna Scithe': 'mots',\n    'Sanguine Depths': 'sd',\n    Plaguefall: 'pf',\n};\n\nfunction getAbbr(key) {\n    return Abbrs[key];\n}\n\nconst BG = styled.div`\n    background: #000;\n    line-height: 45px;\n    padding: 0px 22px;\n`;\nconst FilterTitle = styled.b`\n    margin-right: 1rem;\n`;\nconst Filter = styled.span`\n    cursor: pointer;\n    font-family: monospace;\n`;\n\nexport default function LFGFilter({ runs }) {\n    const [copied, setCopied] = useState(false);\n\n    const [keysByLvl, lowestKey] = useMemo(() => {\n        const _keysByLvl = {};\n        let _lowestKey = 999;\n        runs?.forEach(run => {\n            if (_keysByLvl[run.mythic_level]) {\n                _keysByLvl[run.mythic_level].push(run.dungeon);\n            } else {\n                _keysByLvl[run.mythic_level] = [run.dungeon];\n            }\n            if (run.mythic_level <= _lowestKey) {\n                _lowestKey = run.mythic_level;\n            }\n        });\n        return [_keysByLvl, _lowestKey];\n    }, [runs]);\n\n    useEffect(() => {\n        if (copied) {\n            setTimeout(() => {\n                setCopied(false);\n            }, 2000);\n        }\n    }, [copied]);\n\n    const filterText = keysByLvl[lowestKey].map(getAbbr).join(' or ');\n\n    return (\n        <BG>\n            <FilterTitle>LFG Filter</FilterTitle>\n            <CopyToClipboard text={filterText} onCopy={() => setCopied(true)}>\n                <Filter>{!copied ? filterText : 'Copied!'}</Filter>\n            </CopyToClipboard>\n        </BG>\n    );\n}\n","import styles from './char.module.css';\n\nimport { Fragment } from 'react';\nimport styled from 'styled-components';\n\nimport useRaiderIOStats from '../../helpers/useRaiderIOStats';\nimport { DeleteFilled } from '@ant-design/icons';\nimport { Card, Avatar, Divider } from 'antd';\n\nimport LFGFilter from './LFGFilter';\n\nconst Crawled = styled.div`\n\topacity: 0.8;\n\tmargin-top: 10px;\n\tfont-size: 0.8rem;\n`;\n\nexport default function Char({ char, onDelete }) {\n\tconst rio = useRaiderIOStats(char);\n\n\tif (!rio) {\n\t\treturn null;\n\t}\n\n\tif (rio.error) {\n\t\treturn (\n\t\t\t<Card className={styles.card}>\n\t\t\t\t<strong>{rio.error}</strong>\n\t\t\t\t<p>{rio.message}</p>\n\t\t\t\t<DeleteFilled onClick={onDelete} className={styles.delete} />\n\t\t\t</Card>\n\t\t);\n\t}\n\n\tconst currentScores = rio.mythic_plus_scores_by_season[0].scores;\n\tconst bestRuns = rio.mythic_plus_best_runs;\n\n\tconst title = (\n\t\t<>\n\t\t\t<Avatar src={rio.thumbnail_url} className={styles.avatar} />\n\t\t\t<a\n\t\t\t\thref={rio.profile_url}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t\tclassName={styles.avatarAnnex}\n\t\t\t>\n\t\t\t\t<strong>{rio.name}</strong>\n\t\t\t\t<small style={{ marginLeft: '10px' }}>\n\t\t\t\t\t{rio.race} {rio.class}\n\t\t\t\t</small>\n\t\t\t</a>\n\t\t</>\n\t);\n\treturn (\n\t\t<Card className={styles.card}>\n\t\t\t<Card.Meta title={title} />\n\t\t\t<h3 className={styles.mainScore}>{currentScores.all}</h3>\n\t\t\t<h3 className={styles.avatarAnnex}>\n\t\t\t\t<DeleteFilled onClick={onDelete} className={styles.icon} />\n\t\t\t</h3>\n\t\t\t{currentScores.tank ? (\n\t\t\t\t<span className={styles.subscore}>\n\t\t\t\t\t<strong>Tank</strong>: {currentScores.tank}\n\t\t\t\t</span>\n\t\t\t) : null}\n\t\t\t{currentScores.healer ? (\n\t\t\t\t<span className={styles.subscore}>\n\t\t\t\t\t<strong>Healer</strong>: {currentScores.healer}\n\t\t\t\t</span>\n\t\t\t) : null}\n\t\t\t{currentScores.dps ? (\n\t\t\t\t<span className={styles.subscore}>\n\t\t\t\t\t<strong>DPS</strong>: {currentScores.dps}\n\t\t\t\t</span>\n\t\t\t) : null}\n\t\t\t<Divider />\n\t\t\t<div className={styles.grid}>\n\t\t\t\t<div>\n\t\t\t\t\t<strong>Dungeon</strong>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<strong>Level</strong>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<strong>Score</strong>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<strong>+?</strong>\n\t\t\t\t</div>\n\t\t\t\t{bestRuns.map(run => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Fragment key={run.dungeon}>\n\t\t\t\t\t\t\t<div>{run.dungeon}</div>\n\t\t\t\t\t\t\t<div>{run.mythic_level}</div>\n\t\t\t\t\t\t\t<div>{run.score}</div>\n\t\t\t\t\t\t\t<div>{run.num_keystone_upgrades}</div>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t<Crawled>Last crawled at {new Date(rio.last_crawled_at).toLocaleString()}</Crawled>\n\t\t\t<div className={styles.onHover}>\n\t\t\t\t<LFGFilter runs={bestRuns} />\n\t\t\t</div>\n\t\t</Card>\n\t);\n}\n","import styles from './index.module.css';\n\nimport useLocalStorage from '../../helpers/useLocalStorage';\n\nimport { Layout } from 'antd';\nimport AddChar from '../common/AddChar';\nimport Char from './Char';\n\nconst { Content } = Layout;\n\nexport default function Index() {\n\tconst [chars, setChars] = useLocalStorage('raiderio', []);\n\n\tfunction onAdd(char) {\n\t\tsetChars([...chars, char]);\n\t}\n\n\tfunction onDelete(index) {\n\t\tsetChars([...chars.slice(0, index), ...chars.slice(index + 1)]);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Content style={{ padding: '20px 50px' }}>\n\t\t\t\t<AddChar onAdd={onAdd} />\n\t\t\t</Content>\n\t\t\t<Content className={styles.cards}>\n\t\t\t\t{chars &&\n\t\t\t\t\tchars.map((char, index) => (\n\t\t\t\t\t\t<Char key={index} char={char} onDelete={onDelete.bind(this, index)} />\n\t\t\t\t\t))}\n\t\t\t</Content>\n\t\t</>\n\t);\n}\n","import axios from 'axios';\nimport useLocalStorage from './useLocalStorage';\n\nconst clientID = '939c7296-5335-40c4-9338-b213bfcadc92';\nconst clientSecret = '1SyEyndtXPGyQIXWPz4w4dheqOeKSKk22hBCQzUP';\nconst authBody = new FormData();\nauthBody.append('grant_type', 'client_credentials');\n\nlet _req;\nfunction getToken(cb) {\n\tif (!_req) {\n\t\t_req = axios({\n\t\t\tmethod: 'post',\n\t\t\turl: 'https://www.warcraftlogs.com/oauth/token',\n\t\t\tdata: authBody,\n\t\t\theaders: { 'Content-Type': 'multipart/form-data' },\n\t\t\tauth: {\n\t\t\t\tusername: clientID,\n\t\t\t\tpassword: clientSecret,\n\t\t\t},\n\t\t});\n\t}\n\t_req.then(resp => {\n\t\tcb(resp.data.access_token);\n\t}).catch(e => {\n\t\tconsole.error(e);\n\t\tcb(e.response.data);\n\t});\n}\n\nexport default function useAuthToken() {\n\tconst [token, setToken] = useLocalStorage('auth_token');\n\n\tif (!token) {\n\t\tgetToken(setToken);\n\t}\n\treturn token;\n}\n","let _handler,\n    queue = [];\n\n/**\n * A generic queuer, that takes a bunch of jobs functions to execute and waits to execute them\n * until the browser has some idle time.\n * @param  {Function} job    The job to be queued\n * @return {void}\n */\nexport default function enqueue(job) {\n    if (typeof job !== 'function') {\n        throw new Error('Unknown job type. Jobs must be functions.');\n    }\n\n    queue.push(job);\n    if (!_handler) {\n        _handler = requestIdleCallback(() => {\n            if (queue.length > 0) {\n                queue.forEach(q => {\n                    q();\n                });\n            }\n            queue = [];\n            _handler = undefined;\n        });\n    }\n}\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport useAuthToken from './useAuthToken';\nimport enqueue from './enqueue';\n\nfunction serialize(char) {\n\treturn `${char.region}:${char.server}:${char.name}`;\n}\n\nconst query = ({ name, server, region }) => `\n{\n\tcharacterData {\n\t\tcharacter(\n\t\t\tname: \"${name}\"\n\t\t\tserverSlug: \"${server}\"\n\t\t\tserverRegion: \"${region}\"\n\t\t) {\n\t\t\tzoneRankings(\n\t\t\t\tdifficulty: 4\n\t\t\t\tzoneID: 26\n\t\t\t)\n\t\t}\n\t}\n}\n`;\n\nconst _cache = {};\nwindow.wlDPSStats = _cache;\nconsole.log('See `wlDPSStats` to view fetched RIO data.');\n\nexport default function useWLCharStats(chars) {\n\tconst token = useAuthToken();\n\tconst [vals, setVals] = useState({});\n\n\tuseEffect(() => {\n\t\tconst config = {\n\t\t\theaders: { Authorization: `Bearer ${token}` },\n\t\t};\n\n\t\tchars.forEach(char => {\n\t\t\tconst key = serialize(char);\n\n\t\t\tif (_cache[key]) {\n\t\t\t\tif (!vals[key]) {\n\t\t\t\t\tsetVals(vals => ({\n\t\t\t\t\t\t...vals,\n\t\t\t\t\t\t[key]: _cache[key],\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_cache[key] = {\n\t\t\t\tisFetching: true,\n\t\t\t};\n\t\t\tsetVals(vals => ({\n\t\t\t\t...vals,\n\t\t\t\t[key]: _cache[key],\n\t\t\t}));\n\n\t\t\taxios\n\t\t\t\t.post(\n\t\t\t\t\t'https://www.warcraftlogs.com/api/v2/client',\n\t\t\t\t\t{\n\t\t\t\t\t\tquery: query(char),\n\t\t\t\t\t},\n\t\t\t\t\tconfig\n\t\t\t\t)\n\t\t\t\t.then(val => {\n\t\t\t\t\tconst charData = val?.data?.data?.characterData?.character;\n\t\t\t\t\t_cache[key] = charData\n\t\t\t\t\t\t? { ...charData, name: char.name }\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\tmessage: 'Found no character stats',\n\t\t\t\t\t\t  };\n\t\t\t\t\tenqueue(() =>\n\t\t\t\t\t\tsetVals(vals => ({\n\t\t\t\t\t\t\t...vals,\n\t\t\t\t\t\t\t[key]: _cache[key],\n\t\t\t\t\t\t}))\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.catch(console.error);\n\t\t});\n\t}, [chars, token, setVals, vals]);\n\n\treturn vals;\n}\n","// import styles from './index.module.css';\n\nimport { useEffect, useState } from 'react';\n\nimport useLocalStorage from '../../../helpers/useLocalStorage';\nimport useWLCharStats from '../../../helpers/useWLCharStats';\n\nimport { Layout } from 'antd';\nimport AddChar from '../../common/AddChar';\n// import Char from './Char';\n\nconst { Content } = Layout;\n\nfunction consolidateByBoss(prevStats, allStats) {\n\tconst { byBoss = {}, bosses = {} } = prevStats;\n\tlet newByBoss = byBoss,\n\t\tnewBosses = bosses;\n\n\t// eslint-disable-next-line\n\tfor (const key in allStats) {\n\t\tconst val = allStats[key];\n\n\t\tif (val.isFetching) continue;\n\t\tconst name = val.name,\n\t\t\trankings = val.zoneRankings?.rankings;\n\n\t\tif (byBoss[name]) continue;\n\n\t\tif (newByBoss === byBoss) {\n\t\t\tnewByBoss = { ...byBoss };\n\t\t}\n\n\t\tnewByBoss[name] = rankings?.map(rank => {\n\t\t\tconst boss = rank.encounter.name;\n\n\t\t\tif (!bosses[boss]) {\n\t\t\t\tif (newBosses === bosses) {\n\t\t\t\t\tnewBosses = { ...bosses };\n\t\t\t\t}\n\n\t\t\t\tnewBosses = {\n\t\t\t\t\t...newBosses,\n\t\t\t\t\t[boss]: true,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tboss,\n\t\t\t\tbestAmount: rank.bestAmount,\n\t\t\t};\n\t\t});\n\t}\n\treturn newByBoss !== byBoss || newBosses !== bosses\n\t\t? { byBoss: newByBoss, bosses: newBosses }\n\t\t: prevStats;\n}\n\nexport default function Index() {\n\tconst [chars, setChars] = useLocalStorage('warcraftlogs', []);\n\tconst allStats = useWLCharStats(chars);\n\n\tconst [stats, setStats] = useState({});\n\tuseEffect(() => {\n\t\tconst newStats = consolidateByBoss(stats, allStats);\n\t\tif (newStats !== stats) {\n\t\t\tsetStats(newStats);\n\t\t}\n\t}, [stats, allStats]);\n\n\tfunction onAdd(char) {\n\t\tsetChars([...chars, char]);\n\t}\n\n\tfunction onDelete(index) {\n\t\tsetChars([...chars.slice(0, index), ...chars.slice(index + 1)]);\n\t}\n\n\tconsole.log(stats);\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Under construction</h1>\n\t\t\t<Content style={{ padding: '20px 50px' }}>\n\t\t\t\t<AddChar onAdd={onAdd} />\n\t\t\t</Content>\n\t\t\t<Content style={{ padding: '0 50px 20px' }}>\n\t\t\t\t{chars &&\n\t\t\t\t\tchars.map((char, index) => (\n\t\t\t\t\t\t<div key={index}>\n\t\t\t\t\t\t\t<pre>{JSON.stringify(char, undefined, '  ')}</pre>\n\t\t\t\t\t\t\t<button onClick={onDelete.bind(this, index)}>delete</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t</Content>\n\t\t</>\n\t);\n}\n","import styles from './app.module.css';\n\nimport useLocalStorage from '../helpers/useLocalStorage';\n\nimport RaiderIO from './raiderio';\nimport WarcraftLogs from './warcraftlogs';\n\nimport { Layout, Menu } from 'antd';\nconst { Header } = Layout;\n\nconst Tabs = {\n    RAIDERIO: 'rio',\n    WARCRAFTLOGS: 'wcl',\n};\n\nconst TabMap = {\n    [Tabs.RAIDERIO]: RaiderIO,\n    [Tabs.WARCRAFTLOGS]: WarcraftLogs,\n};\n\nfunction App() {\n    const [tab, setTab] = useLocalStorage('selectedTab', [Tabs.RAIDERIO]);\n\n    function onChangeTab({ keyPath }) {\n        setTab(keyPath);\n    }\n\n    const Tab = TabMap[tab[0]];\n\n    return (\n        <Layout className={styles.app}>\n            <Header>\n                <Menu theme=\"dark\" mode=\"horizontal\" selectedKeys={tab} onClick={onChangeTab}>\n                    <Menu.Item key={Tabs.RAIDERIO}>Raider.IO</Menu.Item>\n                    <Menu.Item key={Tabs.WARCRAFTLOGS}>Warcraft Logs</Menu.Item>\n                </Menu>\n            </Header>\n            <Tab />\n        </Layout>\n    );\n}\n\nexport default App;\n","import Char from './char';\n\nexport default function WarcraftLogs() {\n\treturn <Char />;\n}\n","import './index.css';\nimport 'antd/dist/antd.dark.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatarAnnex\":\"char_avatarAnnex__35AYj\",\"avatar\":\"char_avatar__282x6\",\"card\":\"char_card__3aviT\",\"icon\":\"char_icon__21VfR\",\"onHover\":\"char_onHover__1KYtY\",\"mainScore\":\"char_mainScore__1aO3A\",\"delete\":\"char_delete__3YpGC\",\"subscore\":\"char_subscore__3uPcB\",\"grid\":\"char_grid__2A1i_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cont\":\"addchar_cont__2VDMy\",\"field\":\"addchar_field__3SYcZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__1F5XI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"raiderio_cards__1vhFy\"};"],"sourceRoot":""}