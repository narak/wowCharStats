{"version":3,"sources":["components/warcraftlogs/char/zoneselector.module.css","components/app.module.css","components/raiderio/index.module.css","utils/useLocalStorage.js","components/common/AddChar.js","utils/useRaiderIOStats.js","components/raiderio/LFGFilter.js","components/raiderio/Char.js","components/raiderio/index.js","constants/WarcraftLogs.js","utils/useWCLAuthToken.js","utils/useWCLCharStats.js","constants/Boss.js","helpers/consolidateWCLStats.js","components/warcraftlogs/char/ZoneSelector.js","components/warcraftlogs/char/BossSelector.js","components/warcraftlogs/char/CopyPaste.js","components/warcraftlogs/char/index.js","components/App.js","components/warcraftlogs/index.js","index.js","components/raiderio/char.module.css","components/common/addchar.module.css"],"names":["module","exports","useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","Option","Select","AddChar","onAdd","region","server","name","char","setChar","onChange","e","target","onSubmit","preventDefault","className","styles","cont","field","style","width","bind","this","type","placeholder","htmlType","_cache","rioStats","Abbrs","Plaguefall","getAbbr","BG","styled","div","FilterTitle","b","Filter","span","LFGFilter","runs","copied","setCopied","useMemo","_keysByLvl","_lowestKey","forEach","run","mythic_level","push","dungeon","keysByLvl","lowestKey","useEffect","setTimeout","filterText","map","join","text","onCopy","Crawled","Char","onDelete","rio","serialize","setRIOStats","axios","get","url","then","resp","data","catch","response","useRaiderIOStats","card","message","DeleteFilled","onClick","delete","currentScores","mythic_plus_scores_by_season","scores","bestRuns","mythic_plus_best_runs","title","src","thumbnail_url","avatar","href","profile_url","rel","avatarAnnex","marginLeft","race","class","Meta","mainScore","all","icon","tank","subscore","healer","dps","grid","score","num_keystone_upgrades","Date","last_crawled_at","toLocaleString","onHover","Content","Layout","_req","Zone","SOD","CN","ZoneLabel","ZoneId","Difficulty","Mythic","Heroic","Normal","LFR","DifficultyLabel","DifficultyId","authBody","FormData","useWCLAuthToken","cb","token","setToken","method","headers","auth","username","password","access_token","append","query","id","difficulty","wlCharStats","ShortName","getWclUrl","zoneId","Zones","Object","keys","Difficulties","ZoneSelector","bosses","mode","allowClear","minWidth","TextArea","Input","CopyPaste","chars","setChars","showPaste","setShowPaste","config","setConfig","setError","visible","onOk","onCancel","rows","undefined","cleanServer","realm","replace","toLowerCase","Index","zone","setZone","setBosses","allStats","vals","setVals","_zone","Authorization","isFetching","post","val","charData","characterData","character","isError","errors","useWCLCharStats","bossMap","length","reduce","acc","boss","stats","byBoss","rankings","zoneRankings","rank","encounter","bestAmount","bestSpec","rankPercent","wlDPSStats","useCallback","filter","columns","dataIndex","render","record","index","rec","placement","spec","sorter","a","getRows","dataSource","failedChars","bossStats","toFixed","getData","padding","some","_char","_server","warn","pagination","Header","Tabs","TabMap","slice","cards","App","tab","setTab","Tab","app","theme","selectedKeys","keyPath","Item","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46f28842.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cont\":\"zoneselector_cont__19IuZ\",\"field\":\"zoneselector_field__1UOPE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__1F5XI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"raiderio_cards__1vhFy\"};","import { useState } from 'react';\n\n// Hook\nexport default function useLocalStorage(key, initialValue) {\n    key = 'wcs::' + key;\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n        try {\n            // Get from local storage by key\n            const item = window.localStorage.getItem(key);\n            // Parse stored json or if none return initialValue\n            return item ? JSON.parse(item) : initialValue;\n        } catch (error) {\n            // If error also return initialValue\n            console.log(error);\n            return initialValue;\n        }\n    });\n\n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = value => {\n        try {\n            // Allow value to be a function so we have same API as useState\n            const valueToStore = value instanceof Function ? value(storedValue) : value;\n            // Save state\n            setStoredValue(valueToStore);\n            // Save to local storage\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\n        } catch (error) {\n            // A more advanced implementation would handle the error case\n            console.log(error);\n        }\n    };\n\n    return [storedValue, setValue];\n}\n","import styles from './addchar.module.css';\n\nimport { useState } from 'react';\nimport { Button, Input, Select } from 'antd';\n\nconst { Option } = Select;\n\nexport default function AddChar({ onAdd }) {\n    const [char, setChar] = useState({ region: 'us', server: 'frostmourne', name: '' });\n    function onSubmit(e) {\n        e.preventDefault();\n        onAdd(char);\n    }\n\n    function onChangeSelect(key, value) {\n        setChar({ ...char, [key]: value });\n    }\n    function onChange(key, e) {\n        setChar({ ...char, [key]: e.target.value });\n    }\n\n    return (\n        <form onSubmit={onSubmit} className={styles.cont}>\n            <div className={styles.field}>\n                <Select\n                    style={{ width: 120 }}\n                    value={char.region}\n                    onChange={onChangeSelect.bind(this, 'region')}\n                >\n                    <Option value=\"us\">us</Option>\n                    <Option value=\"eu\">eu</Option>\n                    <Option value=\"tw\">tw</Option>\n                    <Option value=\"kr\">kr</Option>\n                    <Option value=\"cn\">cn</Option>\n                </Select>\n            </div>\n            <div className={styles.field}>\n                <Input\n                    type=\"text\"\n                    name=\"server\"\n                    value={char.server}\n                    placeholder=\"Server\"\n                    onChange={onChange.bind(this, 'server')}\n                />\n            </div>\n            <div className={styles.field}>\n                <Input\n                    type=\"text\"\n                    name=\"char\"\n                    value={char.name}\n                    placeholder=\"Character\"\n                    onChange={onChange.bind(this, 'name')}\n                />\n            </div>\n            <div className={styles.field}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Add\n                </Button>\n            </div>\n        </form>\n    );\n}\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction serialize(char) {\n\treturn `${char.region}:${char.server}:${char.name}`;\n}\n\nfunction url(char) {\n\treturn `https://raider.io/api/v1/characters/profile?region=${char.region}&realm=${char.server}&name=${char.name}&fields=mythic_plus_scores_by_season:current,mythic_plus_best_runs`;\n}\n\nconst _cache = {};\nwindow.rioStats = _cache;\nconsole.log('See `rioStats` to view fetched RIO data.');\n\nexport default function useRaiderIOStats(char) {\n\tconst key = serialize(char);\n\tconst [rioStats, setRIOStats] = useState(_cache);\n\tuseEffect(() => {\n\t\tif (!rioStats[key]) {\n\t\t\tconsole.log('Fetching', key);\n\t\t\taxios\n\t\t\t\t.get(url(char))\n\t\t\t\t.then(resp => {\n\t\t\t\t\tconsole.log('resp', resp);\n\t\t\t\t\t_cache[key] = resp.data;\n\t\t\t\t\tsetRIOStats({\n\t\t\t\t\t\t...rioStats,\n\t\t\t\t\t\t[key]: resp.data,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(function (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\tsetRIOStats({\n\t\t\t\t\t\t...rioStats,\n\t\t\t\t\t\t[key]: error?.response?.data || error,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t}, [key, char, rioStats, setRIOStats]);\n\treturn rioStats[key];\n}\n","import { useMemo, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nconst Abbrs = {\n    'Spires of Ascension': 'soa',\n    'Theater of Pain': 'top',\n    'Halls of Atonement': 'hoa',\n    'The Necrotic Wake': 'nw',\n    'De Other Side': 'dos',\n    'Mists of Tirna Scithe': 'mots',\n    'Sanguine Depths': 'sd',\n    Plaguefall: 'pf',\n};\n\nfunction getAbbr(key) {\n    return Abbrs[key];\n}\n\nconst BG = styled.div`\n    background: #000;\n    line-height: 45px;\n    padding: 0px 22px;\n`;\nconst FilterTitle = styled.b`\n    margin-right: 1rem;\n`;\nconst Filter = styled.span`\n    cursor: pointer;\n    font-family: monospace;\n`;\n\nexport default function LFGFilter({ runs }) {\n    const [copied, setCopied] = useState(false);\n\n    const [keysByLvl, lowestKey] = useMemo(() => {\n        const _keysByLvl = {};\n        let _lowestKey = 999;\n        runs?.forEach(run => {\n            if (_keysByLvl[run.mythic_level]) {\n                _keysByLvl[run.mythic_level].push(run.dungeon);\n            } else {\n                _keysByLvl[run.mythic_level] = [run.dungeon];\n            }\n            if (run.mythic_level <= _lowestKey) {\n                _lowestKey = run.mythic_level;\n            }\n        });\n        return [_keysByLvl, _lowestKey];\n    }, [runs]);\n\n    useEffect(() => {\n        if (copied) {\n            setTimeout(() => {\n                setCopied(false);\n            }, 2000);\n        }\n    }, [copied]);\n\n    const filterText = keysByLvl[lowestKey].map(getAbbr).join(' or ');\n\n    return (\n        <BG>\n            <FilterTitle>LFG Filter</FilterTitle>\n            <CopyToClipboard text={filterText} onCopy={() => setCopied(true)}>\n                <Filter>{!copied ? filterText : 'Copied!'}</Filter>\n            </CopyToClipboard>\n        </BG>\n    );\n}\n","import styles from './char.module.css';\n\nimport { Fragment } from 'react';\nimport styled from 'styled-components';\n\nimport useRaiderIOStats from '../../utils/useRaiderIOStats';\nimport { DeleteFilled } from '@ant-design/icons';\nimport { Card, Avatar, Divider } from 'antd';\n\nimport LFGFilter from './LFGFilter';\n\nconst Crawled = styled.div`\n\topacity: 0.8;\n\tmargin-top: 10px;\n\tfont-size: 0.8rem;\n`;\n\nexport default function Char({ char, onDelete }) {\n\tconst rio = useRaiderIOStats(char);\n\n\tif (!rio) {\n\t\treturn null;\n\t}\n\n\tif (rio.error) {\n\t\treturn (\n\t\t\t<Card className={styles.card}>\n\t\t\t\t<strong>{rio.error}</strong>\n\t\t\t\t<p>{rio.message}</p>\n\t\t\t\t<DeleteFilled onClick={onDelete} className={styles.delete} />\n\t\t\t</Card>\n\t\t);\n\t}\n\n\tconst currentScores = rio.mythic_plus_scores_by_season[0].scores;\n\tconst bestRuns = rio.mythic_plus_best_runs;\n\n\tconst title = (\n\t\t<>\n\t\t\t<Avatar src={rio.thumbnail_url} className={styles.avatar} />\n\t\t\t<a\n\t\t\t\thref={rio.profile_url}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t\tclassName={styles.avatarAnnex}\n\t\t\t>\n\t\t\t\t<strong>{rio.name}</strong>\n\t\t\t\t<small style={{ marginLeft: '10px' }}>\n\t\t\t\t\t{rio.race} {rio.class}\n\t\t\t\t</small>\n\t\t\t</a>\n\t\t</>\n\t);\n\treturn (\n\t\t<Card className={styles.card}>\n\t\t\t<Card.Meta title={title} />\n\t\t\t<h3 className={styles.mainScore}>{currentScores.all}</h3>\n\t\t\t<h3 className={styles.avatarAnnex}>\n\t\t\t\t<DeleteFilled onClick={onDelete} className={styles.icon} />\n\t\t\t</h3>\n\t\t\t{currentScores.tank ? (\n\t\t\t\t<span className={styles.subscore}>\n\t\t\t\t\t<strong>Tank</strong>: {currentScores.tank}\n\t\t\t\t</span>\n\t\t\t) : null}\n\t\t\t{currentScores.healer ? (\n\t\t\t\t<span className={styles.subscore}>\n\t\t\t\t\t<strong>Healer</strong>: {currentScores.healer}\n\t\t\t\t</span>\n\t\t\t) : null}\n\t\t\t{currentScores.dps ? (\n\t\t\t\t<span className={styles.subscore}>\n\t\t\t\t\t<strong>DPS</strong>: {currentScores.dps}\n\t\t\t\t</span>\n\t\t\t) : null}\n\t\t\t<Divider />\n\t\t\t<div className={styles.grid}>\n\t\t\t\t<div>\n\t\t\t\t\t<strong>Dungeon</strong>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<strong>Level</strong>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<strong>Score</strong>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<strong>+?</strong>\n\t\t\t\t</div>\n\t\t\t\t{bestRuns.map(run => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Fragment key={run.dungeon}>\n\t\t\t\t\t\t\t<div>{run.dungeon}</div>\n\t\t\t\t\t\t\t<div>{run.mythic_level}</div>\n\t\t\t\t\t\t\t<div>{run.score}</div>\n\t\t\t\t\t\t\t<div>{run.num_keystone_upgrades}</div>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t<Crawled>Last crawled at {new Date(rio.last_crawled_at).toLocaleString()}</Crawled>\n\t\t\t<div className={styles.onHover}>\n\t\t\t\t<LFGFilter runs={bestRuns} />\n\t\t\t</div>\n\t\t</Card>\n\t);\n}\n","import styles from './index.module.css';\n\nimport useLocalStorage from '../../utils/useLocalStorage';\n\nimport { Layout } from 'antd';\nimport AddChar from '../common/AddChar';\nimport Char from './Char';\n\nconst { Content } = Layout;\n\nexport default function Index() {\n\tconst [chars, setChars] = useLocalStorage('raiderio', []);\n\n\tfunction onAdd(char) {\n\t\tsetChars([...chars, char]);\n\t}\n\n\tfunction onDelete(index) {\n\t\tsetChars([...chars.slice(0, index), ...chars.slice(index + 1)]);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Content style={{ padding: '20px 50px' }}>\n\t\t\t\t<AddChar onAdd={onAdd} />\n\t\t\t</Content>\n\t\t\t<Content className={styles.cards}>\n\t\t\t\t{chars &&\n\t\t\t\t\tchars.map((char, index) => (\n\t\t\t\t\t\t<Char key={index} char={char} onDelete={onDelete.bind(this, index)} />\n\t\t\t\t\t))}\n\t\t\t</Content>\n\t\t</>\n\t);\n}\n","export const Zone = {\n    SOD: 'SOD',\n    CN: 'CN',\n};\n\nexport const ZoneLabel = {\n    [Zone.SOD]: 'Sanctum of Domination',\n    [Zone.CN]: 'Castle Nathria',\n};\n\nexport const ZoneId = {\n    [Zone.SOD]: 28,\n    [Zone.CN]: 26,\n};\n\nexport const Difficulty = {\n    Mythic: 'Mythic',\n    Heroic: 'Heroic',\n    Normal: 'Normal',\n    LFR: 'LFR',\n};\n\nexport const DifficultyLabel = {\n    [Difficulty.Mythic]: 'Mythic',\n    [Difficulty.Heroic]: 'Heroic',\n    [Difficulty.Normal]: 'Normal',\n    [Difficulty.LFR]: 'LFR',\n};\n\nexport const DifficultyId = {\n    [Difficulty.Mythic]: 5,\n    [Difficulty.Heroic]: 4,\n    [Difficulty.Normal]: 3,\n    [Difficulty.LFR]: 1,\n};\n","import axios from 'axios';\nimport useLocalStorage from './useLocalStorage';\n\nconst clientID = '939c7296-5335-40c4-9338-b213bfcadc92';\nconst clientSecret = '1SyEyndtXPGyQIXWPz4w4dheqOeKSKk22hBCQzUP';\nconst authBody = new FormData();\nauthBody.append('grant_type', 'client_credentials');\n\nlet _req;\nfunction getToken(cb) {\n\tif (!_req) {\n\t\t_req = axios({\n\t\t\tmethod: 'post',\n\t\t\turl: 'https://www.warcraftlogs.com/oauth/token',\n\t\t\tdata: authBody,\n\t\t\theaders: { 'Content-Type': 'multipart/form-data' },\n\t\t\tauth: {\n\t\t\t\tusername: clientID,\n\t\t\t\tpassword: clientSecret,\n\t\t\t},\n\t\t});\n\t}\n\t_req.then(resp => {\n\t\tcb(resp.data.access_token);\n\t}).catch(e => {\n\t\tconsole.error(e);\n\t\tcb(e.response.data);\n\t});\n}\n\nexport default function useWCLAuthToken() {\n\tconst [token, setToken] = useLocalStorage('auth_token');\n\n\tif (!token) {\n\t\tgetToken(setToken);\n\t}\n\treturn token;\n}\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport useWCLAuthToken from './useWCLAuthToken';\n\nimport { ZoneId, DifficultyId } from '../constants/WarcraftLogs';\n\nfunction serialize({ id, difficulty }, { name, server, region }) {\n\treturn `${id}:${difficulty}:${region}:${server}:${name}`;\n}\n\nconst query = ({ id, difficulty }, { name, server, region }) => `\n{\n\tcharacterData {\n\t\tcharacter(\n\t\t\tname: \"${name}\"\n\t\t\tserverSlug: \"${server}\"\n\t\t\tserverRegion: \"${region}\"\n\t\t) {\n\t\t\tzoneRankings(\n\t\t\t\tdifficulty: ${DifficultyId[difficulty]}\n\t\t\t\tzoneID: ${ZoneId[id]}\n\t\t\t\trole: DPS\n\t\t\t\tmetric: dps\n\t\t\t)\n\t\t}\n\t}\n}\n`;\n\nconst _cache = {};\nwindow.wlCharStats = _cache;\nconsole.log('See `wlCharStats` to view fetched RIO data.');\n\nexport default function useWCLCharStats({ zone, chars }) {\n\tconst token = useWCLAuthToken();\n\tconst [vals, setVals] = useState({});\n\tconst [_zone, setZone] = useState(zone);\n\tif (zone !== _zone) {\n\t\tsetZone(zone);\n\t\tsetVals({});\n\t}\n\n\tuseEffect(() => {\n\t\tconst config = {\n\t\t\theaders: { Authorization: `Bearer ${token}` },\n\t\t};\n\n\t\tchars.forEach(char => {\n\t\t\tconst key = serialize(zone, char);\n\n\t\t\tif (_cache[key]) {\n\t\t\t\tif (!vals[key]) {\n\t\t\t\t\tsetVals(vals => ({\n\t\t\t\t\t\t...vals,\n\t\t\t\t\t\t[key]: _cache[key],\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_cache[key] = {\n\t\t\t\tisFetching: true,\n\t\t\t};\n\t\t\tsetVals(vals => ({\n\t\t\t\t...vals,\n\t\t\t\t[key]: _cache[key],\n\t\t\t}));\n\n\t\t\taxios\n\t\t\t\t.post(\n\t\t\t\t\t'https://www.warcraftlogs.com/api/v2/client',\n\t\t\t\t\t{\n\t\t\t\t\t\tquery: query(zone, char),\n\t\t\t\t\t},\n\t\t\t\t\tconfig\n\t\t\t\t)\n\t\t\t\t.then(val => {\n\t\t\t\t\tconst charData = val?.data?.data?.characterData?.character;\n\t\t\t\t\t_cache[key] = charData\n\t\t\t\t\t\t? { ...charData, ...zone, ...char }\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\tmessage: 'Found no character stats',\n\t\t\t\t\t\t\t\tisError: true,\n\t\t\t\t\t\t\t\t...zone,\n\t\t\t\t\t\t\t\t...char,\n\t\t\t\t\t\t  };\n\n\t\t\t\t\tif (val?.data?.errors) {\n\t\t\t\t\t\tconsole.error(val.data.errors.map(e => e.message));\n\t\t\t\t\t}\n\t\t\t\t\tsetVals(vals => ({\n\t\t\t\t\t\t...vals,\n\t\t\t\t\t\t[key]: _cache[key],\n\t\t\t\t\t}));\n\t\t\t\t})\n\t\t\t\t.catch(console.error);\n\t\t});\n\t}, [zone, chars, token, vals]);\n\n\treturn vals;\n}\n","export const ShortName = {\n    'The Tarragrue': 'Tarragrue',\n    'The Eye of the Jailer': 'The Eye',\n    'The Nine': 'The Nine',\n    \"Remnant of Ner'zhul\": \"Ner'zhul\",\n    'Soulrender Dormazain': 'Soulrender',\n    'Painsmith Raznal': 'Painsmith',\n    'Guardian of the First Ones': 'Guardian',\n    'Fatescribe Roh-Kalo': 'Fatescribe',\n    \"Kel'Thuzad\": 'KT',\n    'Sylvanas Windrunner': 'Sylvanas',\n};\n","import { ZoneId, DifficultyId } from '../constants/WarcraftLogs';\nimport { ShortName } from '../constants/Boss';\n\nimport { Tooltip } from 'antd';\nimport { DeleteFilled } from '@ant-design/icons';\n\nfunction getWclUrl({ region, server, name, difficulty, zoneId }) {\n    return `https://www.warcraftlogs.com/character/${region}/${server}/${name}#difficulty=${DifficultyId[difficulty]}&zone=${ZoneId[zoneId]}`;\n}\n\nexport function byBoss(allStats) {\n    let byBoss = {},\n        bosses = {};\n\n    for (const key in allStats) {\n        const val = allStats[key];\n\n        if (val.isFetching) continue;\n        const name = val.name,\n            rankings = val.zoneRankings?.rankings;\n\n        // eslint-disable-next-line\n        byBoss[name] = rankings\n            ? rankings.map(rank => {\n                  const boss = rank.encounter.name;\n\n                  if (!bosses[boss]) {\n                      bosses[boss] = true;\n                  }\n\n                  return {\n                      boss,\n                      bestAmount: rank.bestAmount,\n                      bestSpec: rank.bestSpec,\n                      rankPercent: rank.rankPercent,\n                  };\n              })\n            : val.isError\n            ? val\n            : undefined;\n    }\n    return { byBoss: byBoss, bosses: Object.keys(bosses) };\n}\n\nexport function getRows({ stats, bossMap, onDelete }) {\n    let columns;\n    if (stats.bosses.length) {\n        columns = stats.bosses.reduce((acc, boss) => {\n            if (!bossMap || bossMap[boss]) {\n                acc.push({\n                    title: ShortName[boss],\n                    dataIndex: boss,\n                    key: boss,\n                    render: (text, record, index) => {\n                        const rec = record[boss];\n                        if (+rec.value === 0) {\n                            return '-';\n                        } else {\n                            return (\n                                <>\n                                    <Tooltip placement=\"bottom\" title={`${rec.rankPercent}%`}>\n                                        {rec.value}\n                                    </Tooltip>\n                                    <br />\n                                    <small>{rec.spec}</small>\n                                </>\n                            );\n                        }\n                    },\n                    sorter: (a, b) => {\n                        return a[boss].value - b[boss].value;\n                    },\n                });\n            }\n            return acc;\n        }, []);\n    } else {\n        columns = [];\n    }\n\n    return [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n            render: (text, record) => {\n                return (\n                    <a href={getWclUrl(record)} target=\"_blank\" rel=\"noreferrer\">\n                        {record.name}\n                    </a>\n                );\n            },\n        },\n        ...columns,\n        {\n            dataIndex: 'action',\n            key: 'action',\n            render: (text, record) => {\n                return <DeleteFilled onClick={onDelete.bind(this, record.name)} />;\n            },\n        },\n    ];\n}\n\nexport function getData({ stats, chars, bossMap, id: zoneId, difficulty }) {\n    const dataSource = [];\n    const failedChars = [];\n\n    if (stats.bosses.length) {\n        chars.forEach(char => {\n            const { name } = char;\n            const bossStats = stats.byBoss[name];\n            if (bossStats && !bossStats.isError) {\n                dataSource.push({\n                    name,\n                    key: name,\n                    zoneId,\n                    difficulty,\n                    ...char,\n                    ...bossStats.reduce((acc, val) => {\n                        if (!bossMap || bossMap[val.boss]) {\n                            acc[val.boss] = {\n                                value: val.bestAmount.toFixed(2),\n                                spec: val.bestSpec,\n                                rankPercent: val.rankPercent?.toFixed(2),\n                            };\n                        }\n                        return acc;\n                    }, {}),\n                });\n            } else {\n                failedChars.push(bossStats);\n            }\n        });\n    }\n    return [dataSource, failedChars];\n}\n","import styles from './zoneselector.module.css';\n\nimport { Zone, ZoneLabel, Difficulty, DifficultyLabel } from '../../../constants/WarcraftLogs';\n\nimport { Select } from 'antd';\nconst { Option } = Select;\n\nconst Zones = Object.keys(Zone);\nconst Difficulties = Object.keys(Difficulty);\n\nexport default function ZoneSelector({ value, onChange }) {\n    const { id, difficulty } = value;\n\n    function onSetZone(id) {\n        onChange({\n            ...value,\n            id,\n        });\n    }\n    function onSetDifficulty(difficulty) {\n        onChange({\n            ...value,\n            difficulty,\n        });\n    }\n    return (\n        <div className={styles.cont}>\n            <div className={styles.field}>\n                <Select style={{ width: 240 }} value={id} onChange={onSetZone}>\n                    {Zones.map(key => {\n                        return (\n                            <Option value={key} key={key}>\n                                {ZoneLabel[key]}\n                            </Option>\n                        );\n                    })}\n                </Select>\n            </div>\n            <div className={styles.field}>\n                <Select style={{ width: 160 }} value={difficulty} onChange={onSetDifficulty}>\n                    {Difficulties.map(key => {\n                        return (\n                            <Option value={key} key={key}>\n                                {DifficultyLabel[key]}\n                            </Option>\n                        );\n                    })}\n                </Select>\n            </div>\n        </div>\n    );\n}\n","import { Select } from 'antd';\nconst { Option } = Select;\n\nexport default function ZoneSelector({ bosses = [], value = [], onChange }) {\n    return (\n        <div>\n            <Select\n                mode=\"multiple\"\n                allowClear\n                style={{ minWidth: 700 }}\n                value={value}\n                onChange={onChange}\n                placeholder=\"Select Bosses\"\n            >\n                {bosses.map(key => {\n                    return <Option key={key}>{key}</Option>;\n                })}\n            </Select>\n        </div>\n    );\n}\n","import { useState, useMemo, useEffect } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Modal, Button, Input, Alert } from 'antd';\nconst { TextArea } = Input;\n\nexport default function CopyPaste({ chars, setChars }) {\n    const [copied, setCopied] = useState(false);\n    const [showPaste, setShowPaste] = useState(false);\n    const [config, setConfig] = useState('');\n    const [error, setError] = useState();\n\n    function onOk() {\n        try {\n            setChars(JSON.parse(config));\n            setShowPaste(false);\n        } catch (error) {\n            setError(error);\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        if (copied) {\n            setTimeout(() => {\n                setCopied(false);\n            }, 2000);\n        }\n    }, [copied]);\n\n    return (\n        <>\n            <Modal\n                title=\"Paste Config\"\n                visible={showPaste}\n                onOk={onOk}\n                onCancel={() => setShowPaste(false)}\n            >\n                {error ? <Alert message=\"Unable to parse config\" type=\"error\" /> : null}\n                <TextArea\n                    rows={15}\n                    value={config}\n                    onChange={e => {\n                        setConfig(e.target.value);\n                        setError(undefined);\n                    }}\n                />\n            </Modal>\n            <CopyToClipboard\n                text={useMemo(() => JSON.stringify(chars), [chars])}\n                onCopy={() => setCopied(true)}\n            >\n                <Button>{!copied ? 'Copy' : 'Copied!'}</Button>\n            </CopyToClipboard>\n            <Button onClick={() => setShowPaste(true)}>Paste</Button>\n        </>\n    );\n}\n","// import styles from './index.module.css';\n\nimport { /*useEffect, useState, */ useMemo, useCallback } from 'react';\n\nimport { Zone, Difficulty } from '../../../constants/WarcraftLogs';\n\nimport useLocalStorage from '../../../utils/useLocalStorage';\nimport useWCLCharStats from '../../../utils/useWCLCharStats';\nimport { byBoss, getRows, getData } from '../../../helpers/consolidateWCLStats';\n\nimport { Layout, Table, Button } from 'antd';\nimport AddChar from '../../common/AddChar';\nimport ZoneSelector from './ZoneSelector';\nimport BossSelector from './BossSelector';\nimport CopyPaste from './CopyPaste';\n\nconst { Content } = Layout;\n\nfunction cleanServer(realm) {\n\treturn realm.replace(/-|\\s/g, '').toLowerCase();\n}\n\nconsole.log('See `wlDPSStats` to view consolidated stats.');\n\nexport default function Index() {\n\tconst [chars, setChars] = useLocalStorage('wlTrackedChars', []);\n\tconst [zone, setZone] = useLocalStorage('wlZone', {\n\t\tid: Zone.SOD,\n\t\tdifficulty: Difficulty.Heroic,\n\t});\n\tconst { id: zoneId } = zone;\n\tconst [bosses, setBosses] = useLocalStorage('wlBosses', {});\n\tconst allStats = useWCLCharStats({ zone, chars });\n\n\tconst bossMap =\n\t\tbosses[zoneId] && bosses[zoneId].length\n\t\t\t? bosses[zoneId].reduce((acc, boss) => {\n\t\t\t\t\tacc[boss] = true;\n\t\t\t\t\treturn acc;\n\t\t\t  }, {})\n\t\t\t: null;\n\n\tconst stats = useMemo(() => {\n\t\treturn byBoss(allStats);\n\t}, [allStats]);\n\twindow.wlDPSStats = stats;\n\n\tfunction onAdd(char) {\n\t\tlet { name, server, region } = char;\n\t\tname = name.toLowerCase();\n\t\tserver = cleanServer(server);\n\t\tregion = region.toLowerCase();\n\t\tconst exists = chars.some(_char => {\n\t\t\tconst _server = cleanServer(_char.server);\n\t\t\tif (\n\t\t\t\t_char.name.toLowerCase() === name &&\n\t\t\t\t_server === server &&\n\t\t\t\t_char.region.toLowerCase() === region\n\t\t\t) {\n\t\t\t\tconsole.warn('User already exists');\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\tif (!exists) {\n\t\t\tsetChars([...chars, char]);\n\t\t}\n\t}\n\n\tfunction onChangeSelectedBosses(value) {\n\t\tsetBosses({ ...bosses, [zoneId]: value });\n\t}\n\n\tconst onDelete = useCallback(\n\t\tname => {\n\t\t\tsetChars(chars.filter(char => char.name !== name));\n\t\t},\n\t\t[setChars, chars]\n\t);\n\n\tconst columns = useMemo(() => {\n\t\treturn getRows({ stats, bossMap, onDelete });\n\t}, [stats, bossMap, onDelete]);\n\n\tconst [dataSource, failedChars] = useMemo(() => {\n\t\treturn getData({ stats, chars, bossMap, ...zone });\n\t}, [stats, chars, bossMap, zone]);\n\n\treturn (\n\t\t<>\n\t\t\t<Content style={{ padding: '50px 50px 10px' }}>\n\t\t\t\t<AddChar onAdd={onAdd} />\n\t\t\t</Content>\n\t\t\t<Content style={{ padding: '10px 50px' }}>\n\t\t\t\t<ZoneSelector value={zone} onChange={setZone} />\n\t\t\t</Content>\n\t\t\t<Content style={{ padding: '10px 50px 10px' }}>\n\t\t\t\t<BossSelector\n\t\t\t\t\tbosses={stats && stats.bosses ? stats.bosses : undefined}\n\t\t\t\t\tvalue={bosses[zoneId]}\n\t\t\t\t\tonChange={onChangeSelectedBosses}\n\t\t\t\t/>\n\t\t\t</Content>\n\t\t\t<Content style={{ padding: '20px 50px' }}>\n\t\t\t\t<CopyPaste chars={chars} setChars={setChars} />\n\t\t\t</Content>\n\t\t\t<Content style={{ padding: '10px 50px 50px' }}>\n\t\t\t\t{failedChars.length ? (\n\t\t\t\t\t<div style={{ padding: '0 1px' }}>\n\t\t\t\t\t\t<strong>Failed to fetch</strong>:{' '}\n\t\t\t\t\t\t{failedChars.map(char =>\n\t\t\t\t\t\t\tchar ? (\n\t\t\t\t\t\t\t\t<Button type=\"text\" onClick={onDelete.bind(this, char.name)}>\n\t\t\t\t\t\t\t\t\t{char.name}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t\t<Table dataSource={dataSource} columns={columns} pagination={false} />\n\t\t\t</Content>\n\t\t</>\n\t);\n}\n","import styles from './app.module.css';\n\nimport useLocalStorage from '../utils/useLocalStorage';\n\nimport RaiderIO from './raiderio';\nimport WarcraftLogs from './warcraftlogs';\n\nimport { Layout, Menu } from 'antd';\nconst { Header } = Layout;\n\nconst Tabs = {\n    RAIDERIO: 'rio',\n    WARCRAFTLOGS: 'wcl',\n};\n\nconst TabMap = {\n    [Tabs.RAIDERIO]: RaiderIO,\n    [Tabs.WARCRAFTLOGS]: WarcraftLogs,\n};\n\nfunction App() {\n    const [tab, setTab] = useLocalStorage('selectedTab', [Tabs.RAIDERIO]);\n\n    function onChangeTab({ keyPath }) {\n        setTab(keyPath);\n    }\n\n    const Tab = TabMap[tab[0]];\n\n    return (\n        <Layout className={styles.app}>\n            <Header>\n                <Menu theme=\"dark\" mode=\"horizontal\" selectedKeys={tab} onClick={onChangeTab}>\n                    <Menu.Item key={Tabs.RAIDERIO}>Raider.IO</Menu.Item>\n                    <Menu.Item key={Tabs.WARCRAFTLOGS}>Warcraft Logs</Menu.Item>\n                </Menu>\n            </Header>\n            <Tab />\n        </Layout>\n    );\n}\n\nexport default App;\n","import Char from './char';\n\nexport default function WarcraftLogs() {\n\treturn <Char />;\n}\n","import './index.css';\nimport 'antd/dist/antd.dark.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatarAnnex\":\"char_avatarAnnex__35AYj\",\"avatar\":\"char_avatar__282x6\",\"card\":\"char_card__3aviT\",\"icon\":\"char_icon__21VfR\",\"onHover\":\"char_onHover__1KYtY\",\"mainScore\":\"char_mainScore__1aO3A\",\"delete\":\"char_delete__3YpGC\",\"subscore\":\"char_subscore__3uPcB\",\"grid\":\"char_grid__2A1i_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cont\":\"addchar_cont__2VDMy\",\"field\":\"addchar_field__3SYcZ\"};"],"sourceRoot":""}