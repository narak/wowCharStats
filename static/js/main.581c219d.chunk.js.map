{"version":3,"sources":["components/warcraftlogs/char/zoneselector.module.css","components/app.module.css","components/raiderio/index.module.css","components/warcraftlogs/char/index.module.css","utils/useLocalStorage.js","components/common/AddChar.js","utils/useRaiderIOStats.js","components/raiderio/LFGFilter.js","components/raiderio/Char.js","components/raiderio/index.js","utils/useWCLAuthToken.js","constants/WarcraftLogs.js","utils/useWCLCharStats.js","constants/Boss.js","helpers/consolidateWCLStats.js","components/warcraftlogs/char/ZoneSelector.js","components/warcraftlogs/char/BossSelector.js","components/warcraftlogs/char/CopyPaste.js","components/warcraftlogs/char/index.js","components/App.js","components/warcraftlogs/index.js","index.js","components/raiderio/char.module.css","components/common/addchar.module.css"],"names":["module","exports","useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","Option","Select","AddChar","onAdd","region","server","name","char","setChar","onChange","e","target","onSubmit","preventDefault","className","styles","cont","field","style","width","bind","this","type","placeholder","placement","title","test","url","path","hostname","pathBits","split","htmlType","_cache","rioStats","Abbrs","Plaguefall","getAbbr","BG","styled","div","FilterTitle","b","Filter","span","LFGFilter","runs","copied","setCopied","useMemo","_keysByLvl","_lowestKey","forEach","run","mythic_level","push","dungeon","keysByLvl","lowestKey","useEffect","setTimeout","filterText","map","join","text","onCopy","Crawled","Char","onDelete","rio","serialize","setRIOStats","axios","get","then","resp","data","catch","response","useRaiderIOStats","card","message","DeleteFilled","onClick","delete","currentScores","mythic_plus_scores_by_season","scores","bestRuns","mythic_plus_best_runs","src","thumbnail_url","avatar","href","profile_url","rel","avatarAnnex","marginLeft","race","class","Meta","mainScore","all","icon","tank","subscore","healer","dps","grid","score","num_keystone_upgrades","Date","last_crawled_at","toLocaleString","onHover","Content","Layout","_req","Zone","SOD","CN","ZoneLabel","ZoneId","Difficulty","Mythic","Heroic","Normal","LFR","DifficultyLabel","DifficultyId","authBody","FormData","useWCLAuthToken","cb","token","setToken","method","headers","auth","username","password","access_token","append","query","id","difficulty","wlCharStats","ShortName","getWclUrl","zoneId","byBoss","allStats","bosses","val","isFetching","rankings","zoneRankings","rank","boss","encounter","bestAmount","bestSpec","rankPercent","isError","undefined","o","Object","keys","calcRanks","Zones","Difficulties","ZoneSelector","mode","allowClear","minWidth","TextArea","Input","CopyPaste","chars","setChars","showPaste","setShowPaste","config","setConfig","setError","visible","onOk","onCancel","rows","cleanServer","realm","replace","toLowerCase","Index","zone","setZone","setBosses","vals","setVals","_zone","Authorization","post","charData","characterData","character","errors","useWCLCharStats","bossMap","length","reduce","acc","stats","wlDPSStats","useCallback","filter","columns","dataIndex","render","record","index","rec","spec","sorter","a","fixed","getRows","dataSource","failedChars","bossStats","toFixed","getData","copyPaste","padding","some","_char","_server","warn","pagination","scroll","x","y","Header","Tabs","TabMap","slice","cards","App","tab","setTab","Tab","app","theme","selectedKeys","keyPath","Item","position","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.581c219d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cont\":\"zoneselector_cont__19IuZ\",\"field\":\"zoneselector_field__1UOPE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__1F5XI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"raiderio_cards__1vhFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"copyPaste\":\"char_copyPaste__3Uc_q\"};","import { useState } from 'react';\n\n// Hook\nexport default function useLocalStorage(key, initialValue) {\n    key = 'wcs::' + key;\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n        try {\n            // Get from local storage by key\n            const item = window.localStorage.getItem(key);\n            // Parse stored json or if none return initialValue\n            return item ? JSON.parse(item) : initialValue;\n        } catch (error) {\n            // If error also return initialValue\n            console.log(error);\n            return initialValue;\n        }\n    });\n\n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = value => {\n        try {\n            // Allow value to be a function so we have same API as useState\n            const valueToStore = value instanceof Function ? value(storedValue) : value;\n            // Save state\n            setStoredValue(valueToStore);\n            // Save to local storage\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\n        } catch (error) {\n            // A more advanced implementation would handle the error case\n            console.log(error);\n        }\n    };\n\n    return [storedValue, setValue];\n}\n","import styles from './addchar.module.css';\n\nimport url from 'url';\nimport { useState } from 'react';\nimport { Button, Input, Select, Tooltip } from 'antd';\n\nconst { Option } = Select;\n\nconst NameHelp =\n    'You can paste your WarcraftLogs, Raider.IO or WoW Armory link in here to auto add.';\n\nexport default function AddChar({ onAdd }) {\n    const [char, setChar] = useState({ region: 'us', server: 'frostmourne', name: '' });\n    function onSubmit(e) {\n        e.preventDefault();\n        onAdd(char);\n    }\n\n    function onChangeSelect(key, value) {\n        setChar({ ...char, [key]: value });\n    }\n    function onChange(key, e) {\n        setChar({ ...char, [key]: e.target.value });\n    }\n    function onChangeName(e) {\n        const name = e.target.value;\n\n        // is url\n        if (/^http.*/i.test(name)) {\n            const { path, hostname } = url.parse(name);\n            const pathBits = path.split('/');\n\n            if (/warcraftlogs/i.test(hostname)) {\n                const [, , region, server, name] = pathBits;\n                onAdd({ region, server, name });\n            } else if (/raider\\.io/i.test(hostname)) {\n                const [, , region, server, name] = pathBits;\n                onAdd({ region, server, name });\n            } else if (/worldofwarcraft/i.test(hostname)) {\n                const [, , , region, server, name] = pathBits;\n                onAdd({ region, server, name });\n            }\n        } else {\n            onChange('name', e);\n        }\n    }\n\n    return (\n        <form onSubmit={onSubmit} className={styles.cont}>\n            <div className={styles.field}>\n                <Select\n                    style={{ width: 120 }}\n                    value={char.region}\n                    onChange={onChangeSelect.bind(this, 'region')}\n                >\n                    <Option value=\"us\">us</Option>\n                    <Option value=\"eu\">eu</Option>\n                    <Option value=\"tw\">tw</Option>\n                    <Option value=\"kr\">kr</Option>\n                    <Option value=\"cn\">cn</Option>\n                </Select>\n            </div>\n            <div className={styles.field}>\n                <Input\n                    type=\"text\"\n                    name=\"server\"\n                    value={char.server}\n                    placeholder=\"Server\"\n                    onChange={onChange.bind(this, 'server')}\n                />\n            </div>\n            <div className={styles.field}>\n                <Tooltip placement=\"bottom\" title={NameHelp}>\n                    <Input\n                        type=\"text\"\n                        name=\"char\"\n                        value={char.name}\n                        placeholder=\"Character\"\n                        onChange={onChangeName}\n                    />\n                </Tooltip>\n            </div>\n            <div className={styles.field}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Add\n                </Button>\n            </div>\n        </form>\n    );\n}\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction serialize(char) {\n\treturn `${char.region}:${char.server}:${char.name}`;\n}\n\nfunction url(char) {\n\treturn `https://raider.io/api/v1/characters/profile?region=${char.region}&realm=${char.server}&name=${char.name}&fields=mythic_plus_scores_by_season:current,mythic_plus_best_runs`;\n}\n\nconst _cache = {};\nwindow.rioStats = _cache;\nconsole.log('See `rioStats` to view fetched RIO data.');\n\nexport default function useRaiderIOStats(char) {\n\tconst key = serialize(char);\n\tconst [rioStats, setRIOStats] = useState(_cache);\n\tuseEffect(() => {\n\t\tif (!rioStats[key]) {\n\t\t\tconsole.log('Fetching', key);\n\t\t\taxios\n\t\t\t\t.get(url(char))\n\t\t\t\t.then(resp => {\n\t\t\t\t\tconsole.log('resp', resp);\n\t\t\t\t\t_cache[key] = resp.data;\n\t\t\t\t\tsetRIOStats({\n\t\t\t\t\t\t...rioStats,\n\t\t\t\t\t\t[key]: resp.data,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(function (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\tsetRIOStats({\n\t\t\t\t\t\t...rioStats,\n\t\t\t\t\t\t[key]: error?.response?.data || error,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t}, [key, char, rioStats, setRIOStats]);\n\treturn rioStats[key];\n}\n","import { useMemo, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nconst Abbrs = {\n    'Spires of Ascension': 'soa',\n    'Theater of Pain': 'top',\n    'Halls of Atonement': 'hoa',\n    'The Necrotic Wake': 'nw',\n    'De Other Side': 'dos',\n    'Mists of Tirna Scithe': 'mots',\n    'Sanguine Depths': 'sd',\n    Plaguefall: 'pf',\n};\n\nfunction getAbbr(key) {\n    return Abbrs[key];\n}\n\nconst BG = styled.div`\n    background: #000;\n    line-height: 45px;\n    padding: 0px 22px;\n`;\nconst FilterTitle = styled.b`\n    margin-right: 1rem;\n`;\nconst Filter = styled.span`\n    cursor: pointer;\n    font-family: monospace;\n`;\n\nexport default function LFGFilter({ runs }) {\n    const [copied, setCopied] = useState(false);\n\n    const [keysByLvl, lowestKey] = useMemo(() => {\n        const _keysByLvl = {};\n        let _lowestKey = 999;\n        runs?.forEach(run => {\n            if (_keysByLvl[run.mythic_level]) {\n                _keysByLvl[run.mythic_level].push(run.dungeon);\n            } else {\n                _keysByLvl[run.mythic_level] = [run.dungeon];\n            }\n            if (run.mythic_level <= _lowestKey) {\n                _lowestKey = run.mythic_level;\n            }\n        });\n        return [_keysByLvl, _lowestKey];\n    }, [runs]);\n\n    useEffect(() => {\n        if (copied) {\n            setTimeout(() => {\n                setCopied(false);\n            }, 2000);\n        }\n    }, [copied]);\n\n    const filterText = keysByLvl[lowestKey].map(getAbbr).join(' or ');\n\n    return (\n        <BG>\n            <FilterTitle>LFG Filter</FilterTitle>\n            <CopyToClipboard text={filterText} onCopy={() => setCopied(true)}>\n                <Filter>{!copied ? filterText : 'Copied!'}</Filter>\n            </CopyToClipboard>\n        </BG>\n    );\n}\n","import styles from './char.module.css';\n\nimport { Fragment } from 'react';\nimport styled from 'styled-components';\n\nimport useRaiderIOStats from '../../utils/useRaiderIOStats';\nimport { DeleteFilled } from '@ant-design/icons';\nimport { Card, Avatar, Divider } from 'antd';\n\nimport LFGFilter from './LFGFilter';\n\nconst Crawled = styled.div`\n\topacity: 0.8;\n\tmargin-top: 10px;\n\tfont-size: 0.8rem;\n`;\n\nexport default function Char({ char, onDelete }) {\n\tconst rio = useRaiderIOStats(char);\n\n\tif (!rio) {\n\t\treturn null;\n\t}\n\n\tif (rio.error) {\n\t\treturn (\n\t\t\t<Card className={styles.card}>\n\t\t\t\t<strong>{rio.error}</strong>\n\t\t\t\t<p>{rio.message}</p>\n\t\t\t\t<DeleteFilled onClick={onDelete} className={styles.delete} />\n\t\t\t</Card>\n\t\t);\n\t}\n\n\tconst currentScores = rio.mythic_plus_scores_by_season[0].scores;\n\tconst bestRuns = rio.mythic_plus_best_runs;\n\n\tconst title = (\n\t\t<>\n\t\t\t<Avatar src={rio.thumbnail_url} className={styles.avatar} />\n\t\t\t<a\n\t\t\t\thref={rio.profile_url}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t\tclassName={styles.avatarAnnex}\n\t\t\t>\n\t\t\t\t<strong>{rio.name}</strong>\n\t\t\t\t<small style={{ marginLeft: '10px' }}>\n\t\t\t\t\t{rio.race} {rio.class}\n\t\t\t\t</small>\n\t\t\t</a>\n\t\t</>\n\t);\n\treturn (\n\t\t<Card className={styles.card}>\n\t\t\t<Card.Meta title={title} />\n\t\t\t<h3 className={styles.mainScore}>{currentScores.all}</h3>\n\t\t\t<h3 className={styles.avatarAnnex}>\n\t\t\t\t<DeleteFilled onClick={onDelete} className={styles.icon} />\n\t\t\t</h3>\n\t\t\t{currentScores.tank ? (\n\t\t\t\t<span className={styles.subscore}>\n\t\t\t\t\t<strong>Tank</strong>: {currentScores.tank}\n\t\t\t\t</span>\n\t\t\t) : null}\n\t\t\t{currentScores.healer ? (\n\t\t\t\t<span className={styles.subscore}>\n\t\t\t\t\t<strong>Healer</strong>: {currentScores.healer}\n\t\t\t\t</span>\n\t\t\t) : null}\n\t\t\t{currentScores.dps ? (\n\t\t\t\t<span className={styles.subscore}>\n\t\t\t\t\t<strong>DPS</strong>: {currentScores.dps}\n\t\t\t\t</span>\n\t\t\t) : null}\n\t\t\t<Divider />\n\t\t\t<div className={styles.grid}>\n\t\t\t\t<div>\n\t\t\t\t\t<strong>Dungeon</strong>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<strong>Level</strong>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<strong>Score</strong>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<strong>+?</strong>\n\t\t\t\t</div>\n\t\t\t\t{bestRuns.map(run => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Fragment key={run.dungeon}>\n\t\t\t\t\t\t\t<div>{run.dungeon}</div>\n\t\t\t\t\t\t\t<div>{run.mythic_level}</div>\n\t\t\t\t\t\t\t<div>{run.score}</div>\n\t\t\t\t\t\t\t<div>{run.num_keystone_upgrades}</div>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t<Crawled>Last crawled at {new Date(rio.last_crawled_at).toLocaleString()}</Crawled>\n\t\t\t<div className={styles.onHover}>\n\t\t\t\t<LFGFilter runs={bestRuns} />\n\t\t\t</div>\n\t\t</Card>\n\t);\n}\n","import styles from './index.module.css';\n\nimport useLocalStorage from '../../utils/useLocalStorage';\n\nimport { Layout } from 'antd';\nimport AddChar from '../common/AddChar';\nimport Char from './Char';\n\nconst { Content } = Layout;\n\nexport default function Index() {\n\tconst [chars, setChars] = useLocalStorage('raiderio', []);\n\n\tfunction onAdd(char) {\n\t\tsetChars([...chars, char]);\n\t}\n\n\tfunction onDelete(index) {\n\t\tsetChars([...chars.slice(0, index), ...chars.slice(index + 1)]);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Content style={{ padding: '20px 50px' }}>\n\t\t\t\t<AddChar onAdd={onAdd} />\n\t\t\t</Content>\n\t\t\t<Content className={styles.cards}>\n\t\t\t\t{chars &&\n\t\t\t\t\tchars.map((char, index) => (\n\t\t\t\t\t\t<Char key={index} char={char} onDelete={onDelete.bind(this, index)} />\n\t\t\t\t\t))}\n\t\t\t</Content>\n\t\t</>\n\t);\n}\n","import axios from 'axios';\nimport useLocalStorage from './useLocalStorage';\n\nconst clientID = '9402436a-a9b0-40aa-a6b4-dad81957f72c';\nconst clientSecret = 'G2LZW1CyLjLQS8kMZjF4gdKfP3vgRRj18K3b2nfB';\nconst authBody = new FormData();\nauthBody.append('grant_type', 'client_credentials');\n\nlet _req;\nfunction getToken(cb) {\n\tif (!_req) {\n\t\t_req = axios({\n\t\t\tmethod: 'post',\n\t\t\turl: 'https://www.warcraftlogs.com/oauth/token',\n\t\t\tdata: authBody,\n\t\t\theaders: { 'Content-Type': 'multipart/form-data' },\n\t\t\tauth: {\n\t\t\t\tusername: clientID,\n\t\t\t\tpassword: clientSecret,\n\t\t\t},\n\t\t});\n\t}\n\t_req.then(resp => {\n\t\tcb(resp.data.access_token);\n\t}).catch(e => {\n\t\tconsole.error(e);\n\t\tcb(e.response.data);\n\t});\n}\n\nexport default function useWCLAuthToken() {\n\tconst [token, setToken] = useLocalStorage('wclAuthToken');\n\n\tif (!token) {\n\t\tgetToken(setToken);\n\t}\n\treturn token;\n}\n","export const Zone = {\n    SOD: 'SOD',\n    CN: 'CN',\n};\n\nexport const ZoneLabel = {\n    [Zone.SOD]: 'Sanctum of Domination',\n    [Zone.CN]: 'Castle Nathria',\n};\n\nexport const ZoneId = {\n    [Zone.SOD]: 28,\n    [Zone.CN]: 26,\n};\n\nexport const Difficulty = {\n    Mythic: 'Mythic',\n    Heroic: 'Heroic',\n    Normal: 'Normal',\n    LFR: 'LFR',\n};\n\nexport const DifficultyLabel = {\n    [Difficulty.Mythic]: 'Mythic',\n    [Difficulty.Heroic]: 'Heroic',\n    [Difficulty.Normal]: 'Normal',\n    [Difficulty.LFR]: 'LFR',\n};\n\nexport const DifficultyId = {\n    [Difficulty.Mythic]: 5,\n    [Difficulty.Heroic]: 4,\n    [Difficulty.Normal]: 3,\n    [Difficulty.LFR]: 1,\n};\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport useWCLAuthToken from './useWCLAuthToken';\n\nimport { ZoneId, DifficultyId } from '../constants/WarcraftLogs';\n\nfunction serialize({ id, difficulty }, { name, server, region }) {\n\treturn `${id}:${difficulty}:${region}:${server}:${name}`;\n}\n\nconst query = ({ id, difficulty }, { name, server, region }) => `\n{\n\tcharacterData {\n\t\tcharacter(\n\t\t\tname: \"${name}\"\n\t\t\tserverSlug: \"${server}\"\n\t\t\tserverRegion: \"${region}\"\n\t\t) {\n\t\t\tzoneRankings(\n\t\t\t\tdifficulty: ${DifficultyId[difficulty]}\n\t\t\t\tzoneID: ${ZoneId[id]}\n\t\t\t\trole: DPS\n\t\t\t\tmetric: dps\n\t\t\t)\n\t\t}\n\t}\n}\n`;\n\nconst _cache = {};\nwindow.wlCharStats = _cache;\nconsole.log('See `wlCharStats` to view fetched RIO data.');\n\nexport default function useWCLCharStats({ zone, chars }) {\n\tconst token = useWCLAuthToken();\n\tconst [vals, setVals] = useState({});\n\tconst [_zone, setZone] = useState(zone);\n\tif (zone !== _zone) {\n\t\tsetZone(zone);\n\t\tsetVals({});\n\t}\n\n\tuseEffect(() => {\n\t\tif (!token) {\n\t\t\treturn;\n\t\t}\n\t\tconst config = {\n\t\t\theaders: { Authorization: `Bearer ${token}` },\n\t\t};\n\n\t\tchars.forEach(char => {\n\t\t\tconst key = serialize(zone, char);\n\n\t\t\tif (_cache[key]) {\n\t\t\t\tif (!vals[key]) {\n\t\t\t\t\tsetVals(vals => ({\n\t\t\t\t\t\t...vals,\n\t\t\t\t\t\t[key]: _cache[key],\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_cache[key] = {\n\t\t\t\tisFetching: true,\n\t\t\t};\n\t\t\tsetVals(vals => ({\n\t\t\t\t...vals,\n\t\t\t\t[key]: _cache[key],\n\t\t\t}));\n\n\t\t\taxios\n\t\t\t\t.post(\n\t\t\t\t\t'https://www.warcraftlogs.com/api/v2/client',\n\t\t\t\t\t{\n\t\t\t\t\t\tquery: query(zone, char),\n\t\t\t\t\t},\n\t\t\t\t\tconfig\n\t\t\t\t)\n\t\t\t\t.then(val => {\n\t\t\t\t\tconst charData = val?.data?.data?.characterData?.character;\n\t\t\t\t\t_cache[key] = charData\n\t\t\t\t\t\t? { ...charData, ...zone, ...char }\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\tmessage: 'Found no character stats',\n\t\t\t\t\t\t\t\tisError: true,\n\t\t\t\t\t\t\t\t...zone,\n\t\t\t\t\t\t\t\t...char,\n\t\t\t\t\t\t  };\n\n\t\t\t\t\tif (val?.data?.errors) {\n\t\t\t\t\t\tconsole.error(val.data.errors.map(e => e.message));\n\t\t\t\t\t}\n\t\t\t\t\tsetVals(vals => ({\n\t\t\t\t\t\t...vals,\n\t\t\t\t\t\t[key]: _cache[key],\n\t\t\t\t\t}));\n\t\t\t\t})\n\t\t\t\t.catch(console.error);\n\t\t});\n\t}, [zone, chars, token, vals]);\n\n\treturn vals;\n}\n","export const ShortName = {\n    'The Tarragrue': 'Tarragrue',\n    'The Eye of the Jailer': 'The Eye',\n    'The Nine': 'The Nine',\n    \"Remnant of Ner'zhul\": \"Ner'zhul\",\n    'Soulrender Dormazain': 'Soulrender',\n    'Painsmith Raznal': 'Painsmith',\n    'Guardian of the First Ones': 'Guardian',\n    'Fatescribe Roh-Kalo': 'Fatescribe',\n    \"Kel'Thuzad\": 'KT',\n    'Sylvanas Windrunner': 'Sylvanas',\n};\n","import { ZoneId, DifficultyId } from '../constants/WarcraftLogs';\nimport { ShortName } from '../constants/Boss';\n\nimport { Tooltip } from 'antd';\nimport { DeleteFilled } from '@ant-design/icons';\n\nfunction getWclUrl({ region, server, name, difficulty, zoneId }) {\n    return `https://www.warcraftlogs.com/character/${region}/${server}/${name}#difficulty=${DifficultyId[difficulty]}&zone=${ZoneId[zoneId]}`;\n}\n\nfunction calcRanks({ byBoss, bosses }) {\n    console.log(byBoss, bosses);\n}\n\nexport function byBoss(allStats) {\n    let byBoss = {},\n        bosses = {};\n\n    for (const key in allStats) {\n        const val = allStats[key];\n\n        if (val.isFetching) continue;\n        const name = val.name,\n            rankings = val.zoneRankings?.rankings;\n\n        // eslint-disable-next-line\n        byBoss[name] = rankings\n            ? rankings.map(rank => {\n                  const boss = rank.encounter.name;\n\n                  if (!bosses[boss]) {\n                      bosses[boss] = true;\n                  }\n\n                  return {\n                      boss,\n                      bestAmount: rank.bestAmount,\n                      bestSpec: rank.bestSpec,\n                      rankPercent: rank.rankPercent,\n                  };\n              })\n            : val.isError\n            ? val\n            : undefined;\n    }\n\n    const o = { byBoss: byBoss, bosses: Object.keys(bosses) };\n    calcRanks(o);\n    return o;\n}\n\nexport function getRows({ stats, bossMap, onDelete }) {\n    let columns;\n    if (stats.bosses.length) {\n        columns = stats.bosses.reduce((acc, boss) => {\n            if (!bossMap || bossMap[boss]) {\n                acc.push({\n                    title: ShortName[boss],\n                    dataIndex: boss,\n                    key: boss,\n                    className: 'blah',\n                    render: (text, record, index) => {\n                        const rec = record[boss];\n                        if (+rec.value === 0) {\n                            return '-';\n                        } else {\n                            return (\n                                <>\n                                    <Tooltip placement=\"bottom\" title={`${rec.rankPercent}%`}>\n                                        {rec.value}\n                                    </Tooltip>\n                                    <br />\n                                    <small>{rec.spec}</small>\n                                </>\n                            );\n                        }\n                    },\n                    sorter: (a, b) => {\n                        return a[boss].value - b[boss].value;\n                    },\n                });\n            }\n            return acc;\n        }, []);\n    } else {\n        columns = [];\n    }\n\n    return [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n            fixed: 'left',\n            render: (text, record) => {\n                return (\n                    <a href={getWclUrl(record)} target=\"_blank\" rel=\"noreferrer\">\n                        {record.name}\n                    </a>\n                );\n            },\n        },\n        ...columns,\n        {\n            dataIndex: 'action',\n            key: 'action',\n            fixed: 'right',\n            width: '50px',\n            render: (text, record) => {\n                return <DeleteFilled onClick={onDelete.bind(this, record.name)} />;\n            },\n        },\n    ];\n}\n\nexport function getData({ stats, chars, bossMap, id: zoneId, difficulty }) {\n    const dataSource = [];\n    const failedChars = [];\n\n    if (stats.bosses.length) {\n        chars.forEach(char => {\n            const { name } = char;\n            const bossStats = stats.byBoss[name];\n            if (bossStats && !bossStats.isError) {\n                dataSource.push({\n                    name,\n                    key: name,\n                    zoneId,\n                    difficulty,\n                    ...char,\n                    ...bossStats.reduce((acc, val) => {\n                        if (!bossMap || bossMap[val.boss]) {\n                            acc[val.boss] = {\n                                value: val.bestAmount.toFixed(2),\n                                spec: val.bestSpec,\n                                rankPercent: val.rankPercent?.toFixed(2),\n                            };\n                        }\n                        return acc;\n                    }, {}),\n                });\n            } else {\n                failedChars.push(bossStats);\n            }\n        });\n    }\n    return [dataSource, failedChars];\n}\n","import styles from './zoneselector.module.css';\n\nimport { Zone, ZoneLabel, Difficulty, DifficultyLabel } from '../../../constants/WarcraftLogs';\n\nimport { Select } from 'antd';\nconst { Option } = Select;\n\nconst Zones = Object.keys(Zone);\nconst Difficulties = Object.keys(Difficulty);\n\nexport default function ZoneSelector({ value, onChange }) {\n    const { id, difficulty } = value;\n\n    function onSetZone(id) {\n        onChange({\n            ...value,\n            id,\n        });\n    }\n    function onSetDifficulty(difficulty) {\n        onChange({\n            ...value,\n            difficulty,\n        });\n    }\n    return (\n        <div className={styles.cont}>\n            <div className={styles.field}>\n                <Select style={{ width: 240 }} value={id} onChange={onSetZone}>\n                    {Zones.map(key => {\n                        return (\n                            <Option value={key} key={key}>\n                                {ZoneLabel[key]}\n                            </Option>\n                        );\n                    })}\n                </Select>\n            </div>\n            <div className={styles.field}>\n                <Select style={{ width: 160 }} value={difficulty} onChange={onSetDifficulty}>\n                    {Difficulties.map(key => {\n                        return (\n                            <Option value={key} key={key}>\n                                {DifficultyLabel[key]}\n                            </Option>\n                        );\n                    })}\n                </Select>\n            </div>\n        </div>\n    );\n}\n","import { Select } from 'antd';\nconst { Option } = Select;\n\nexport default function ZoneSelector({ bosses = [], value = [], onChange }) {\n    return (\n        <div>\n            <Select\n                mode=\"multiple\"\n                allowClear\n                style={{ minWidth: 700 }}\n                value={value}\n                onChange={onChange}\n                placeholder=\"Select Bosses\"\n            >\n                {bosses.map(key => {\n                    return <Option key={key}>{key}</Option>;\n                })}\n            </Select>\n        </div>\n    );\n}\n","import { useState, useMemo, useEffect } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Modal, Button, Input, Alert } from 'antd';\nconst { TextArea } = Input;\n\nexport default function CopyPaste({ chars, setChars }) {\n    const [copied, setCopied] = useState(false);\n    const [showPaste, setShowPaste] = useState(false);\n    const [config, setConfig] = useState('');\n    const [error, setError] = useState();\n\n    function onOk() {\n        try {\n            setChars(JSON.parse(config));\n            setShowPaste(false);\n        } catch (error) {\n            setError(error);\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        if (copied) {\n            setTimeout(() => {\n                setCopied(false);\n            }, 2000);\n        }\n    }, [copied]);\n\n    return (\n        <>\n            <Modal\n                title=\"Paste Config\"\n                visible={showPaste}\n                onOk={onOk}\n                onCancel={() => setShowPaste(false)}\n            >\n                {error ? <Alert message=\"Unable to parse config\" type=\"error\" /> : null}\n                <TextArea\n                    rows={15}\n                    value={config}\n                    onChange={e => {\n                        setConfig(e.target.value);\n                        setError(undefined);\n                    }}\n                />\n            </Modal>\n            <CopyToClipboard\n                text={useMemo(() => JSON.stringify(chars), [chars])}\n                onCopy={() => setCopied(true)}\n            >\n                <Button>{!copied ? 'Copy' : 'Copied!'}</Button>\n            </CopyToClipboard>\n            <Button onClick={() => setShowPaste(true)}>Paste</Button>\n        </>\n    );\n}\n","import styles from './index.module.css';\n\nimport { /*useEffect, useState, */ useMemo, useCallback } from 'react';\n\nimport { Zone, Difficulty } from '../../../constants/WarcraftLogs';\n\nimport useLocalStorage from '../../../utils/useLocalStorage';\nimport useWCLCharStats from '../../../utils/useWCLCharStats';\nimport { byBoss, getRows, getData } from '../../../helpers/consolidateWCLStats';\n\nimport { Layout, Table, Button } from 'antd';\nimport AddChar from '../../common/AddChar';\nimport ZoneSelector from './ZoneSelector';\nimport BossSelector from './BossSelector';\nimport CopyPaste from './CopyPaste';\n\nconst { Content } = Layout;\n\nfunction cleanServer(realm) {\n\treturn realm.replace(/-|\\s/g, '').toLowerCase();\n}\n\nconsole.log('See `wlDPSStats` to view consolidated stats.');\n\nexport default function Index() {\n\tconst [chars, setChars] = useLocalStorage('wlTrackedChars', []);\n\tconst [zone, setZone] = useLocalStorage('wlZone', {\n\t\tid: Zone.SOD,\n\t\tdifficulty: Difficulty.Heroic,\n\t});\n\tconst { id: zoneId } = zone;\n\tconst [bosses, setBosses] = useLocalStorage('wlBosses', {});\n\tconst allStats = useWCLCharStats({ zone, chars });\n\n\tconst bossMap =\n\t\tbosses[zoneId] && bosses[zoneId].length\n\t\t\t? bosses[zoneId].reduce((acc, boss) => {\n\t\t\t\t\tacc[boss] = true;\n\t\t\t\t\treturn acc;\n\t\t\t  }, {})\n\t\t\t: null;\n\n\tconst stats = useMemo(() => {\n\t\treturn byBoss(allStats);\n\t}, [allStats]);\n\twindow.wlDPSStats = stats;\n\n\tfunction onAdd(char) {\n\t\tlet { name, server, region } = char;\n\t\tname = name.toLowerCase();\n\t\tserver = cleanServer(server);\n\t\tregion = region.toLowerCase();\n\t\tconst exists = chars.some(_char => {\n\t\t\tconst _server = cleanServer(_char.server);\n\t\t\tif (\n\t\t\t\t_char.name.toLowerCase() === name &&\n\t\t\t\t_server === server &&\n\t\t\t\t_char.region.toLowerCase() === region\n\t\t\t) {\n\t\t\t\tconsole.warn('User already exists');\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\tif (!exists) {\n\t\t\tsetChars([...chars, char]);\n\t\t}\n\t}\n\n\tfunction onChangeSelectedBosses(value) {\n\t\tsetBosses({ ...bosses, [zoneId]: value });\n\t}\n\n\tconst onDelete = useCallback(\n\t\tname => {\n\t\t\tsetChars(chars.filter(char => char.name !== name));\n\t\t},\n\t\t[setChars, chars]\n\t);\n\n\tconst columns = useMemo(() => {\n\t\treturn getRows({ stats, bossMap, onDelete });\n\t}, [stats, bossMap, onDelete]);\n\n\tconst [dataSource, failedChars] = useMemo(() => {\n\t\treturn getData({ stats, chars, bossMap, ...zone });\n\t}, [stats, chars, bossMap, zone]);\n\n\treturn (\n\t\t<>\n\t\t\t<div className={styles.copyPaste}>\n\t\t\t\t<CopyPaste chars={chars} setChars={setChars} />\n\t\t\t</div>\n\t\t\t<Content style={{ padding: '50px 50px 10px' }}>\n\t\t\t\t<AddChar onAdd={onAdd} />\n\t\t\t</Content>\n\t\t\t<Content style={{ padding: '10px 50px' }}>\n\t\t\t\t<ZoneSelector value={zone} onChange={setZone} />\n\t\t\t</Content>\n\t\t\t<Content style={{ padding: '10px 50px 10px' }}>\n\t\t\t\t<BossSelector\n\t\t\t\t\tbosses={stats && stats.bosses ? stats.bosses : undefined}\n\t\t\t\t\tvalue={bosses[zoneId]}\n\t\t\t\t\tonChange={onChangeSelectedBosses}\n\t\t\t\t/>\n\t\t\t</Content>\n\t\t\t<Content style={{ padding: '10px 50px 50px' }}>\n\t\t\t\t{failedChars.length ? (\n\t\t\t\t\t<div style={{ padding: '0 1px' }}>\n\t\t\t\t\t\t<strong>Failed to fetch</strong>:{' '}\n\t\t\t\t\t\t{failedChars.map(char =>\n\t\t\t\t\t\t\tchar ? (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tonClick={onDelete.bind(this, char.name)}\n\t\t\t\t\t\t\t\t\tkey={char.name}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{char.name}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t\t<Table\n\t\t\t\t\tdataSource={dataSource}\n\t\t\t\t\tcolumns={columns}\n\t\t\t\t\tpagination={false}\n\t\t\t\t\tscroll={{ x: 1440, y: 750 }}\n\t\t\t\t/>\n\t\t\t</Content>\n\t\t</>\n\t);\n}\n","import styles from './app.module.css';\n\nimport useLocalStorage from '../utils/useLocalStorage';\n\nimport RaiderIO from './raiderio';\nimport WarcraftLogs from './warcraftlogs';\n\nimport { Layout, Menu } from 'antd';\nconst { Header } = Layout;\n\nconst Tabs = {\n    RAIDERIO: 'rio',\n    WARCRAFTLOGS: 'wcl',\n};\n\nconst TabMap = {\n    [Tabs.RAIDERIO]: RaiderIO,\n    [Tabs.WARCRAFTLOGS]: WarcraftLogs,\n};\n\nfunction App() {\n    const [tab, setTab] = useLocalStorage('selectedTab', [Tabs.RAIDERIO]);\n\n    function onChangeTab({ keyPath }) {\n        setTab(keyPath);\n    }\n\n    const Tab = TabMap[tab[0]];\n\n    return (\n        <Layout className={styles.app}>\n            <Header>\n                <Menu theme=\"dark\" mode=\"horizontal\" selectedKeys={tab} onClick={onChangeTab}>\n                    <Menu.Item key={Tabs.RAIDERIO}>Raider.IO</Menu.Item>\n                    <Menu.Item key={Tabs.WARCRAFTLOGS}>Warcraft Logs</Menu.Item>\n                </Menu>\n            </Header>\n            <div style={{ position: 'relative' }}>\n                <Tab />\n            </div>\n        </Layout>\n    );\n}\n\nexport default App;\n","import Char from './char';\n\nexport default function WarcraftLogs() {\n\treturn <Char />;\n}\n","import './index.css';\nimport 'antd/dist/antd.dark.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatarAnnex\":\"char_avatarAnnex__35AYj\",\"avatar\":\"char_avatar__282x6\",\"card\":\"char_card__3aviT\",\"icon\":\"char_icon__21VfR\",\"onHover\":\"char_onHover__1KYtY\",\"mainScore\":\"char_mainScore__1aO3A\",\"delete\":\"char_delete__3YpGC\",\"subscore\":\"char_subscore__3uPcB\",\"grid\":\"char_grid__2A1i_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cont\":\"addchar_cont__2VDMy\",\"field\":\"addchar_field__3SYcZ\"};"],"sourceRoot":""}