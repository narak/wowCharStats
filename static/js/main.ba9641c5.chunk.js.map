{"version":3,"sources":["helpers/useLocalStorage.js","components/chars/AddChar.js","helpers/useCharStats.js","components/chars/Char.js","components/chars/index.js","helpers/useAuthToken.js","components/guild/Fights.js","components/guild/SelectGuild.js","components/guild/index.js","components/App.js","index.js","components/chars/char.module.css","components/chars/addchar.module.css","components/guild/selectguild.module.css","components/app.module.css","components/chars/index.module.css"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","Option","Select","AddChar","onAdd","region","server","char","setChar","onChange","e","target","onSubmit","preventDefault","className","styles","cont","field","style","width","bind","this","type","name","placeholder","htmlType","_charStats","charStats","Crawled","styled","div","Char","onDelete","rio","serialize","setCharStats","useEffect","axios","get","url","then","resp","data","catch","response","useCharStats","card","message","DeleteFilled","onClick","delete","currentScores","mythic_plus_scores_by_season","scores","bestRuns","mythic_plus_best_runs","title","src","thumbnail_url","avatar","href","profile_url","rel","avatarAnnex","marginLeft","race","class","Meta","mainScore","all","icon","tank","subscore","healer","dps","grid","map","run","dungeon","mythic_level","score","num_keystone_upgrades","Date","last_crawled_at","toLocaleString","Content","Layout","_req","authBody","FormData","useAuthToken","cb","token","setToken","method","headers","auth","username","password","access_token","append","fightsQuery","code","Fight","span","Fights","setResp","config","Authorization","post","query","fights","reportData","report","fight","SelectGuild","_guild","guild","_onChangeParent","setGuild","attendanceQuery","pageSize","page","Group","Header","TabMap","chars","setChars","index","slice","padding","cards","setResponse","guildData","atnData","attendance","byZone","useMemo","atts","forEach","att","zone","push","startTime","groupByZone","Object","keys","App","tab","setTab","Tab","app","theme","mode","selectedKeys","keyPath","Item","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ba9641c5.chunk.js","sourcesContent":["import { useState } from 'react';\n\n// Hook\nexport default function useLocalStorage(key, initialValue) {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n        try {\n            // Get from local storage by key\n            const item = window.localStorage.getItem(key);\n            // Parse stored json or if none return initialValue\n            return item ? JSON.parse(item) : initialValue;\n        } catch (error) {\n            // If error also return initialValue\n            console.log(error);\n            return initialValue;\n        }\n    });\n\n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = value => {\n        try {\n            // Allow value to be a function so we have same API as useState\n            const valueToStore = value instanceof Function ? value(storedValue) : value;\n            // Save state\n            setStoredValue(valueToStore);\n            // Save to local storage\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\n        } catch (error) {\n            // A more advanced implementation would handle the error case\n            console.log(error);\n        }\n    };\n\n    return [storedValue, setValue];\n}\n","import styles from './addchar.module.css';\n\nimport { useState } from 'react';\nimport { Button, Input, Select } from 'antd';\n\nconst { Option } = Select;\n\nexport default function AddChar({ onAdd }) {\n    const [char, setChar] = useState({ region: 'us', server: '', char: '' });\n    function onSubmit(e) {\n        e.preventDefault();\n        onAdd(char);\n    }\n\n    function onChangeSelect(key, value) {\n        setChar({ ...char, [key]: value });\n    }\n    function onChange(key, e) {\n        setChar({ ...char, [key]: e.target.value });\n    }\n\n    return (\n        <form onSubmit={onSubmit} className={styles.cont}>\n            <div className={styles.field}>\n                <Select\n                    style={{ width: 120 }}\n                    value={char.region}\n                    onChange={onChangeSelect.bind(this, 'region')}\n                >\n                    <Option value=\"us\">us</Option>\n                    <Option value=\"eu\">eu</Option>\n                    <Option value=\"tw\">tw</Option>\n                    <Option value=\"kr\">kr</Option>\n                    <Option value=\"cn\">cn</Option>\n                </Select>\n            </div>\n            <div className={styles.field}>\n                <Input\n                    type=\"text\"\n                    name=\"server\"\n                    value={char.server}\n                    placeholder=\"Server\"\n                    onChange={onChange.bind(this, 'server')}\n                />\n            </div>\n            <div className={styles.field}>\n                <Input\n                    type=\"text\"\n                    name=\"char\"\n                    value={char.char}\n                    placeholder=\"Character\"\n                    onChange={onChange.bind(this, 'char')}\n                />\n            </div>\n            <div className={styles.field}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Add\n                </Button>\n            </div>\n        </form>\n    );\n}\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction serialize(char) {\n\treturn `${char.region}:${char.server}:${char.char}`;\n}\n\nfunction url(char) {\n\treturn `https://raider.io/api/v1/characters/profile?region=${char.region}&realm=${char.server}&name=${char.char}&fields=mythic_plus_scores_by_season:current,mythic_plus_best_runs`;\n}\n\nconst _charStats = {};\nwindow.charStats = _charStats;\nconsole.log('See `charStats` to view fetched RIO data.');\n\nexport default function useCharStats(char) {\n\tconst key = serialize(char);\n\tconst [charStats, setCharStats] = useState(_charStats);\n\tuseEffect(() => {\n\t\tif (!charStats[key]) {\n\t\t\tconsole.log('Fetching', key);\n\t\t\taxios\n\t\t\t\t.get(url(char))\n\t\t\t\t.then(resp => {\n\t\t\t\t\t_charStats[key] = resp.data;\n\t\t\t\t\tsetCharStats({\n\t\t\t\t\t\t...charStats,\n\t\t\t\t\t\t[key]: resp.data,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(function (error) {\n\t\t\t\t\tsetCharStats({\n\t\t\t\t\t\t...charStats,\n\t\t\t\t\t\t[key]: error.response.data,\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t}\n\t}, [key, char, charStats, setCharStats]);\n\treturn charStats[key];\n}\n","import styles from './char.module.css';\n\nimport { Fragment } from 'react';\nimport styled from 'styled-components';\n\nimport useCharStats from '../../helpers/useCharStats';\nimport { DeleteFilled } from '@ant-design/icons';\nimport { Card, Avatar, Divider } from 'antd';\n\nconst Crawled = styled.div`\n\topacity: 0.8;\n\tmargin-top: 10px;\n\tfont-size: 0.8rem;\n`;\n\nexport default function Char({ char, onDelete }) {\n\tconst rio = useCharStats(char);\n\n\tif (!rio) {\n\t\treturn null;\n\t}\n\n\tif (rio.error) {\n\t\treturn (\n\t\t\t<Card className={styles.card}>\n\t\t\t\t<strong>{rio.error}</strong>\n\t\t\t\t<p>{rio.message}</p>\n\t\t\t\t<DeleteFilled onClick={onDelete} className={styles.delete} />\n\t\t\t</Card>\n\t\t);\n\t}\n\n\tconst currentScores = rio.mythic_plus_scores_by_season[0].scores;\n\tconst bestRuns = rio.mythic_plus_best_runs;\n\n\tconst title = (\n\t\t<>\n\t\t\t<Avatar src={rio.thumbnail_url} className={styles.avatar} />\n\t\t\t<a\n\t\t\t\thref={rio.profile_url}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t\tclassName={styles.avatarAnnex}\n\t\t\t>\n\t\t\t\t<strong>{rio.name}</strong>\n\t\t\t\t<small style={{ marginLeft: '10px' }}>\n\t\t\t\t\t{rio.race} {rio.class}\n\t\t\t\t</small>\n\t\t\t</a>\n\t\t</>\n\t);\n\treturn (\n\t\t<Card className={styles.card}>\n\t\t\t<Card.Meta title={title} />\n\t\t\t<h3 className={styles.mainScore}>{currentScores.all}</h3>\n\t\t\t<h3 className={styles.avatarAnnex}>\n\t\t\t\t<DeleteFilled onClick={onDelete} className={styles.icon} />\n\t\t\t</h3>\n\t\t\t{currentScores.tank ? (\n\t\t\t\t<span className={styles.subscore}>\n\t\t\t\t\t<strong>Tank</strong>: {currentScores.tank}\n\t\t\t\t</span>\n\t\t\t) : null}\n\t\t\t{currentScores.healer ? (\n\t\t\t\t<span className={styles.subscore}>\n\t\t\t\t\t<strong>Healer</strong>: {currentScores.healer}\n\t\t\t\t</span>\n\t\t\t) : null}\n\t\t\t{currentScores.dps ? (\n\t\t\t\t<span className={styles.subscore}>\n\t\t\t\t\t<strong>DPS</strong>: {currentScores.dps}\n\t\t\t\t</span>\n\t\t\t) : null}\n\t\t\t<Divider />\n\t\t\t<div className={styles.grid}>\n\t\t\t\t<div>\n\t\t\t\t\t<strong>Dungeon</strong>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<strong>Level</strong>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<strong>Score</strong>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<strong>+?</strong>\n\t\t\t\t</div>\n\t\t\t\t{bestRuns.map(run => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Fragment key={run.dungeon}>\n\t\t\t\t\t\t\t<div>{run.dungeon}</div>\n\t\t\t\t\t\t\t<div>{run.mythic_level}</div>\n\t\t\t\t\t\t\t<div>{run.score}</div>\n\t\t\t\t\t\t\t<div>{run.num_keystone_upgrades}</div>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t<Crawled>Last crawled at {new Date(rio.last_crawled_at).toLocaleString()}</Crawled>\n\t\t</Card>\n\t);\n}\n","import styles from './index.module.css';\n\nimport useLocalStorage from '../../helpers/useLocalStorage';\n\nimport { Layout } from 'antd';\nimport AddChar from './AddChar';\nimport Char from './Char';\n\nconst { Content } = Layout;\n\nexport default function Index() {\n\tconst [chars, setChars] = useLocalStorage('chars', []);\n\n\tfunction onAdd(char) {\n\t\tsetChars([...chars, char]);\n\t}\n\n\tfunction onDelete(index) {\n\t\tsetChars([...chars.slice(0, index), ...chars.slice(index + 1)]);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Content style={{ padding: '20px 50px' }}>\n\t\t\t\t<AddChar onAdd={onAdd} />\n\t\t\t</Content>\n\t\t\t<Content className={styles.cards}>\n\t\t\t\t{chars &&\n\t\t\t\t\tchars.map((char, index) => (\n\t\t\t\t\t\t<Char key={index} char={char} onDelete={onDelete.bind(this, index)} />\n\t\t\t\t\t))}\n\t\t\t</Content>\n\t\t</>\n\t);\n}\n","import axios from 'axios';\nimport useLocalStorage from './useLocalStorage';\n\nconst clientID = '939c7296-5335-40c4-9338-b213bfcadc92';\nconst clientSecret = '1SyEyndtXPGyQIXWPz4w4dheqOeKSKk22hBCQzUP';\nconst authBody = new FormData();\nauthBody.append('grant_type', 'client_credentials');\n\nlet _req;\nfunction getToken(cb) {\n\tif (!_req) {\n\t\t_req = axios({\n\t\t\tmethod: 'post',\n\t\t\turl: 'https://www.warcraftlogs.com/oauth/token',\n\t\t\tdata: authBody,\n\t\t\theaders: { 'Content-Type': 'multipart/form-data' },\n\t\t\tauth: {\n\t\t\t\tusername: clientID,\n\t\t\t\tpassword: clientSecret,\n\t\t\t},\n\t\t});\n\t}\n\t_req.then(resp => {\n\t\tcb(resp.data.access_token);\n\t}).catch(e => {\n\t\tconsole.error(e);\n\t\tcb(e.response.data);\n\t});\n}\n\nexport default function useAuthToken() {\n\tconst [token, setToken] = useLocalStorage('auth_token');\n\n\tif (!token) {\n\t\tgetToken(setToken);\n\t}\n\treturn token;\n}\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nimport useAuthToken from '../../helpers/useAuthToken';\n\n// import { Layout } from 'antd';\n// const { Content } = Layout;\n\nconst fightsQuery = ({ code }) => `\n{\n  reportData {\n    report(\n      code: \"${code}\"\n    ) {\n      fights(\n        killType: Kills\n      ) {\n        id\n        name\n        startTime\n        endTime\n        size\n      }\n    }\n  }\n}\n`;\n\nconst Fight = styled.span`\n\tmargin-right: 1rem;\n`;\n\nexport default function Fights({ code }) {\n\tconst token = useAuthToken();\n\tconst [resp, setResp] = useState();\n\n\tuseEffect(() => {\n\t\tconst config = {\n\t\t\theaders: { Authorization: `Bearer ${token}` },\n\t\t};\n\t\taxios\n\t\t\t.post(\n\t\t\t\t'https://www.warcraftlogs.com/api/v2/client',\n\t\t\t\t{\n\t\t\t\t\tquery: fightsQuery({\n\t\t\t\t\t\tcode,\n\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t\tconfig\n\t\t\t)\n\t\t\t.then(resp => {\n\t\t\t\tsetResp(resp?.data);\n\t\t\t})\n\t\t\t.catch(console.error);\n\t}, [token, setResp, code]);\n\n\tconst fights = resp?.data?.reportData?.report?.fights;\n\n\treturn <div>{fights && fights.map(fight => <Fight key={fight.name}>{fight.name}</Fight>)}</div>;\n}\n","import styles from './selectguild.module.css';\n\nimport { useState } from 'react';\nimport { Button, Input, Select } from 'antd';\n\nconst { Option } = Select;\n\nexport default function SelectGuild({ guild: _guild, onChange: _onChangeParent }) {\n\tconst [guild, setGuild] = useState(_guild);\n\tfunction onSubmit(e) {\n\t\te.preventDefault();\n\t\t_onChangeParent(guild);\n\t}\n\n\tfunction onChangeSelect(key, value) {\n\t\tsetGuild({ ...guild, [key]: value });\n\t}\n\tfunction onChange(key, e) {\n\t\tsetGuild({ ...guild, [key]: e.target.value });\n\t}\n\treturn (\n\t\t<form onSubmit={onSubmit} className={styles.cont}>\n\t\t\t<div className={styles.field}>\n\t\t\t\t<Select\n\t\t\t\t\tstyle={{ width: 120 }}\n\t\t\t\t\tvalue={guild.region}\n\t\t\t\t\tonChange={onChangeSelect.bind(this, 'region')}\n\t\t\t\t>\n\t\t\t\t\t<Option value=\"us\">us</Option>\n\t\t\t\t\t<Option value=\"eu\">eu</Option>\n\t\t\t\t\t<Option value=\"tw\">tw</Option>\n\t\t\t\t\t<Option value=\"kr\">kr</Option>\n\t\t\t\t\t<Option value=\"cn\">cn</Option>\n\t\t\t\t</Select>\n\t\t\t</div>\n\t\t\t<div className={styles.field}>\n\t\t\t\t<Input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"server\"\n\t\t\t\t\tvalue={guild.server}\n\t\t\t\t\tplaceholder=\"Server\"\n\t\t\t\t\tonChange={onChange.bind(this, 'server')}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className={styles.field}>\n\t\t\t\t<Input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"guild\"\n\t\t\t\t\tvalue={guild.guild}\n\t\t\t\t\tplaceholder=\"Character\"\n\t\t\t\t\tonChange={onChange.bind(this, 'guild')}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className={styles.field}>\n\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\n\t\t\t\t\tAdd\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</form>\n\t);\n}\n","import { useEffect, useState, useMemo } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nimport useAuthToken from '../../helpers/useAuthToken';\nimport useLocalStorage from '../../helpers/useLocalStorage';\n\nimport Fights from './Fights';\nimport SelectGuild from './SelectGuild';\n\nimport { Layout } from 'antd';\nconst { Content } = Layout;\n\nconst attendanceQuery = ({ guild, server, region, pageSize = 5, page = 1 }) => `\n{\n    guildData {\n        guild(\n            name: \"${guild}\"\n            serverSlug: \"${server}\"\n            serverRegion: \"${region}\"\n        ) {\n            attendance(\n                limit: ${pageSize}\n                page: ${page}\n            ) {\n                total\n                last_page\n                data {\n                    code\n                    startTime\n                    zone {\n                        name\n                    }\n                }\n            }\n        }\n    }\n}`;\n\nconst Group = styled.div`\n\tmargin-bottom: 2rem;\n`;\n\nfunction groupByZone(atts) {\n\tconst byZone = {};\n\tatts?.forEach(att => {\n\t\tbyZone[att.zone.name] = byZone[att.zone.name] || [];\n\t\tbyZone[att.zone.name].push({ startTime: att.startTime, code: att.code });\n\t});\n\treturn byZone;\n}\n\nexport default function Index() {\n\tconst token = useAuthToken();\n\tconst [response, setResponse] = useState();\n\tconst [guild, setGuild] = useLocalStorage('guild', {\n\t\tguild: 'season zero',\n\t\tserver: 'frostmourne',\n\t\tregion: 'us',\n\t});\n\n\tuseEffect(() => {\n\t\tconst config = {\n\t\t\theaders: { Authorization: `Bearer ${token}` },\n\t\t};\n\t\taxios\n\t\t\t.post(\n\t\t\t\t'https://www.warcraftlogs.com/api/v2/client',\n\t\t\t\t{\n\t\t\t\t\tquery: attendanceQuery(guild),\n\t\t\t\t},\n\t\t\t\tconfig\n\t\t\t)\n\t\t\t.then(resp => {\n\t\t\t\tsetResponse(resp?.data?.data?.guildData?.guild);\n\t\t\t})\n\t\t\t.catch(console.error);\n\t}, [token, setResponse, guild]);\n\n\tconst atnData = response?.attendance.data;\n\tconst byZone = useMemo(() => groupByZone(atnData), [atnData]);\n\n\treturn (\n\t\t<>\n\t\t\t<Content style={{ padding: '20px 50px' }}>\n\t\t\t\t<SelectGuild guild={guild} onChange={setGuild} />\n\t\t\t</Content>\n\t\t\t<Content style={{ padding: '20px 50px' }}>\n\t\t\t\t{byZone\n\t\t\t\t\t? Object.keys(byZone).map(key => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={key}>\n\t\t\t\t\t\t\t\t\t<h3>{key}</h3>\n\t\t\t\t\t\t\t\t\t{byZone[key].map((data, index) => {\n\t\t\t\t\t\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<Group key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t{new Date(data.startTime).toLocaleString()}{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t<Fights code={data.code} />\n\t\t\t\t\t\t\t\t\t\t\t</Group>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t  })\n\t\t\t\t\t: null}\n\t\t\t</Content>\n\t\t</>\n\t);\n}\n","import styles from './app.module.css';\n\nimport useLocalStorage from '../helpers/useLocalStorage';\n\nimport Characters from './chars';\nimport Guild from './guild';\n\nimport { Layout, Menu } from 'antd';\nconst { Header } = Layout;\n\nconst TabMap = {\n    chars: Characters,\n    guild: Guild,\n};\n\nfunction App() {\n    const [tab, setTab] = useLocalStorage('selectedTab', ['chars']);\n\n    function onChangeTab({ keyPath }) {\n        setTab(keyPath);\n    }\n\n    const Tab = TabMap[tab[0]];\n\n    return (\n        <Layout className={styles.app}>\n            <Header>\n                <Menu theme=\"dark\" mode=\"horizontal\" selectedKeys={tab} onClick={onChangeTab}>\n                    <Menu.Item key=\"chars\">Characters</Menu.Item>\n                    <Menu.Item key=\"guild\">Guild Logs</Menu.Item>\n                </Menu>\n            </Header>\n            <Tab />\n        </Layout>\n    );\n}\n\nexport default App;\n","import './index.css';\nimport 'antd/dist/antd.dark.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatarAnnex\":\"char_avatarAnnex__2fcIu\",\"avatar\":\"char_avatar__1R1Ga\",\"card\":\"char_card__2sX9m\",\"icon\":\"char_icon__oJvyd\",\"mainScore\":\"char_mainScore__2UARt\",\"delete\":\"char_delete__zoZl_\",\"subscore\":\"char_subscore__ixFkk\",\"grid\":\"char_grid__LR1HK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cont\":\"addchar_cont__28hfQ\",\"field\":\"addchar_field__2XwTS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cont\":\"selectguild_cont__1rPCS\",\"field\":\"selectguild_field__z7EBX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__1F5XI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"chars_cards__x4dGH\"};"],"sourceRoot":""}